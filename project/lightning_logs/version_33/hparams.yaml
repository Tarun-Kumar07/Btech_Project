backbone: !!python/object:torch.nn.modules.container.Sequential
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _is_full_backward_hook: null
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - - - '0'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.conv.Conv2d
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - - - weight
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyMzg4MTc2cQJYAwAAAGNwdXEDS8hOdHEEUS6AAl1xAFgIAAAAOTIzODgxNzZx
                          AWEuyAAAAAAAAABc6qa9/E8jPNgcA75abA89X/lPPAd8Db4ojvm7Kz/6PTw8cby2hvq68TVTvXGA
                          MDu6VcW9Jw9iPZxt6r3pQS88+O3IOb+F8z0DLrY9701OvfWFDr4qeWi9WzwxPMZq4DqACg89W23f
                          PTFiAr5s3Cm8HLJ5PcMXUL3uFKg9o3jDvYmQ0z0Xwnu8jH+lPRJXCb2qkgm9yxw6PNUWjTznbIQ9
                          +/hpvUY2Xz0zqJq9Of/hvJQGB74R8xq9LegPvnMudb3T1fe9xzfgvWFgBT4KngQ+PLrmPRBmBr43
                          bQ++9wMjPtiou7zVo2y9bL40vt5IEb5DfZE7QPbJvWfgC77imRS+37smvv1iDj5RMvE9+YwHvjvN
                          tjwtmni9PBq/vc9Waz2qQDi9y1w/vun1sD09UuQ9+3HWPFGZy71Ugui9LElqvQYG3TytC3i9jrB1
                          PbOV+L0s3xU8RyuMvPropjxDIx++KSEivHkxOb46qQG+8kGUPcvVxb3RAmK+hpMvviVA1zt7m709
                          keBZvXm9t72LyJ+6HUcQvoPvDj5uvR++10kavgq83L3A7J29ZwC5PMj+57xaTI08en4PvsamELyq
                          jJ89MtkEPnbvjT1vDQG+2LnSvQqogrzYcPq9jJUbvhj9rL1UAzw9yITkO3er1j0KEjS+4TIFvZvt
                          ubwC0Wc9LiYdul5Ey72rNr69flf6PWsCz73o+To+LUyjPbYcHr7ZfTu+OoTpPNyDAT1NvSK+RKRC
                          vv7cCr6RLNO9IPG4PXL3A77DPT++gnHQO8zKOb39/R8+GmEpvjhnlL1RqKW80pAPPhnuSz5tJmk8
                          BFvnPX4Qjjs3x788lo3yPQVUUD4wlLS849uGvbFTRD41vCo9TnmivID6Rj7GEGU9zkiAPC8EMj0+
                          fQg+wKKtPT8wyr34PsY9KoEwPWn1Az6xbTc86Q9OPl/bDz7M/hC9BNc/vdNTKb3nUPo9D7c1PKKR
                          Fz5uCu89B44dPYvV+j28o329oI9oPY+Jtby18FA+cvUpPrkIhrw/+gK9Bia4PekfAD5FNdQ9NSa5
                          vSS+jTzCX30+HRbmPA==
                      - 0
                      - !!python/tuple
                        - 4
                        - 2
                        - 5
                        - 5
                      - !!python/tuple
                        - 50
                        - 25
                        - 5
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
                - - bias
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNDc2OTkycQJYAwAAAGNwdXEDSwROdHEEUS6AAl1xAFgIAAAAOTI0NzY5OTJx
                          AWEuBAAAAAAAAAAW9gy+g4D4PfUtED6kjgU9
                      - 0
                      - !!python/tuple
                        - 4
                      - !!python/tuple
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
              _reversed_padding_repeated_twice: !!python/tuple
              - 2
              - 2
              - 2
              - 2
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              dilation: !!python/tuple
              - 1
              - 1
              groups: 1
              in_channels: 2
              kernel_size: !!python/tuple
              - 5
              - 5
              out_channels: 4
              output_padding: !!python/tuple
              - 0
              - 0
              padding: !!python/tuple
              - 2
              - 2
              padding_mode: zeros
              stride: !!python/tuple
              - 2
              - 2
              training: true
              transposed: false
          - - '1'
            - &id002 !!python/object:qtorch.quant.quant_module.Quantizer
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - []
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              quantize: !!python/name:None.apply ''
              training: true
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '1'
      - &id001 !!python/object:snntorch._neurons.leaky.Leaky
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - - - threshold
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNDIzMTY4cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI0MjMxNjhx
                  AWEuAQAAAAAAAACamZk+
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - reset_mechanism_val
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApMb25nU3RvcmFn
                  ZQpxAVgIAAAAOTI1ODM3MTJxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAgAAAA5MjU4MzcxMnEB
                  YS4BAAAAAAAAAAAAAAAAAAAA
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - beta
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNDA4Mjg4cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI0MDgyODhx
                  AWEuAQAAAAAAAAAzMzM/
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _reset_mechanism: subtract
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        inhibition: false
        init_hidden: true
        mem: !!python/object/apply:torch._tensor._rebuild_from_type_v2
        - &id003 !!python/name:torch._utils._rebuild_tensor_v2 ''
        - &id004 !!python/name:snntorch._neurons.neurons._SpikeTensor ''
        - !!python/tuple
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYCAAAADkyNDc3MjgwcQJYAwAAAGNwdXEDSwBOdHEEUS6AAl1xAFgIAAAAOTI0NzcyODBx
              AWEuAAAAAAAAAAA=
          - 0
          - !!python/tuple
            - 0
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - {}
        output: false
        spike_grad: &id005 !!python/name:snntorch.surrogate.inner ''
        state_fn: !!python/object/apply:builtins.getattr
        - *id001
        - _build_state_function_hidden
        training: true
    - - '2'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.conv.Conv2d
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - - - weight
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkxNjM0NDY0cQJYAwAAAGNwdXEDTSADTnRxBFEugAJdcQBYCAAAADkxNjM0NDY0
                          cQFhLiADAAAAAAAAcdrDPRyN2TyGNK49yvPLPd7Hr7xpUIi9fLGIO3nGYz2PJcM9MTT2u/IBhD0K
                          TOu8uyeNPAPH4bx+XoO9wrtNvfKq4j03qKm88UavvZc8qb08Sxo+RxyNPcmJpz1srYc9Lj7JPQV3
                          QL6D2VK+5fcRvQW98bxgKGW8QTp3vnQ7T74CRuW9B6ObvQ86K74DJDC+WvIGvmKU5r1cpSO+ZKjn
                          vbGAIb4l73m+NrSIvkOaF779BQi+Na0gvtC6I74FO96+NxSlvlEREL5C4js7ryGwvSQDGL5xUU69
                          d9B6vBH/ar2HDw6+/JsSviETgL5KGZG9F55bu+O5/DsT906+bawZvuJnKb4V9Iq+5cSPvl5Fmr5y
                          Ck2+NvpyviYx4DyyeFK+RXu/vWD6Fr7AxYW+hmc1vGqCGTtlc7W9g52fOkEJ8rwlRi+9mjjfvU5L
                          s7zgQTS9TLNUvZ46jj2j+dw9Y1oaPj7S/T1h8YA873y2vAIN5j0FMQE+rQYhPp0bND5vTx49eoYp
                          uqRTbr23shs+lCj2PcwyZr13SPe8ZFmlvJRKhD0H6oE9XRLZPXJWnzveziY85q8pPQtM9zwd+389
                          DxdZvSfdAz4VEpk9MWCZPSZkqz2Dk1A7xnnKvIPF/bx99JU8856PvcmjMz25X449rFuyPXpCVj3k
                          DcI9LBdEvXYNJ759SCU9KC3wPD3JrT3GBjw866HevRB2cTuzQBu+5GMBPjLnZL3oRjo9BRONurr3
                          Ib12Wwu9h5ZdPXzcAT63S6K9oTS1vZcyLLv2uym9Yo5VvabzEj0gL4u9Jo8uvB9Jrr3b5Mq9wir/
                          vQ+Y+r3iGn89dbuRvAB81r0GO6q9UX0GPZsgm72mUeK9r108vexNvr1b9lk9p79/PYRKQD3ZeLm9
                          mqtNPLXBMb1RXRg+jey3vUaLsTo7o+A9xcQevusw17yKC+Y9mZk4Pc0xhD5Dn4M+rxqau9CqVT2o
                          Ohu8tAOuPcQ6ET5WtfC8bADCPNn31Dwhy6E9YfnrPbgcET0+maw9vzs/PDDwpLw8sQo657iovGLP
                          K71jFrw9D0dMPWyOvT17lUi9xKIkPQtWxrx9HYg8p5X6vZvDgjw0vJ29hiyGvY5/XL13Aua9d8uY
                          vVkgy70i+D69xf8XvjUhSj1zl4e92gFGvaElED1Gy4i9p9PAvFrab70W1sm8f0YCvgpGBL7HT1a9
                          +TZIPdHylb1eKKm89iaEvFxZcLv5f2q9hElgvfVHTjx+nky9+0/9vdqhPr7ZSZG9NCZAvucD271F
                          5nm9OsYSvLdHWb1hITO+g3WKvToPbD3QTdA8Ljb7uEusgL0Gxye8Rs5hPSCqEjwPM8C9K9wuvf2C
                          zbxRHGC6WKgUvlFrmryfrgG9ZdAPvvmn0b3avME8k3Z8vazSSb6a6/C4DVjUvf95or1TG7w8sLOV
                          vMUrkr0NgBO+v4rVO3KBAL7ll008v0YkvoICyL3TUoK9frmhPaMUNj3PkYc9EjOyPSAuKz12kIU9
                          GiVEPlOAFD5x/R8+mEqMPpxKVT79cfg96pAqPmOwgz02LSE+6PclPjI+oj4jASQ+likFPkfGxT07
                          iNE9vZpwPokElz4Qzg0+Clm/vaGhBj2Y1Nq97wTpPcCzoj0/Wzu9qKsUPW/JWb1Gcd48F2oPPb5R
                          XDx8JgO6e7DZPYza+rvyG4C9LIyuPCnqD714eZa9+TGiPCx/17ybN4S8BCNKOxEn1j1canm8TZqh
                          PdpHFj1yCr69ibJxvXhj1byWJR29yqKvvfG6szzjMKW8+uCqvIvzCb3u3x++eP7CPcYI2T04p2k9
                          i7dTvNjkArxuyh49EAW1PQpH/7z/4gy+6PO5PYQBaLx4oR09az51PAU/Gb5MJlC8+TxqPGVbP72i
                          ZGe9E4QzPTvvVb7ul5E9pwNKPZm2Mb3xW1+9+HLduh4fj73ABvi9zBASPaIV9TzcH/k9FXEyvd3l
                          ob1kyuI8r2XcO6Z2971tgFY9aW0PPkok97y+hja9lFVWPmLAGr1IdGS8MtasvcKRdL1DqU0+4pkD
                          PXkWr7ot7A2+4GOgvW2OEz4BvyA+fQfTvefyaL6LVAa+eNwyPQFIfLwA0j690T5FOs+EpbzqGGE9
                          jtxBPDfBjT1RcKM8e8kVvkVeYbzi1868/z+7PR9FIj3/pT+9HsyAPYeg670UVPi9spg8vTOAmDzL
                          GZ09DPdYvRznQL1LJHC9YZCjvEvUuD3cy5w9yQHDuylsQD1zpPa82c4/PGVjjz0Mzcw9/yT0vKkF
                          L718F+69T4vHvEwJS76kdba8RIjJvVXJDL6s+pq94dftvaVxYb34IBo+J29hvnPuK71lNqy9keGF
                          vf1Sj73TIiO+CWuLvpQQhb7E2/a9QfHIOzAxUr7XQSa+MYRXvvKEs71mcqu7XmGovTwFxb149yW9
                          AREbvXMqGLwkey29AfHYvUIHNbxUAxi8BSf+PBd1572d6Pa95Dk8voerRL4SGZ28kz2Fvqmxhb4W
                          ybS+gwBovlpvZL7OSVa+cUhgvtpsRL6BMqi9Rw9Bu/uO7LnctAo9P8nbvPthkzusfJO9l+UFPWXT
                          4Dy/xo86SvOFPHToAr6eed09aMYSPkOqHL2Yg0e9wi5RvdEuBD5e8Dw+NnAfPnUaMj60LGq9fhi4
                          PXAk3j05sX8908gXPew3Rb0369C9XEWqvTpliT1o1Ew8BisDO/hCDr2/YA09i3MtvQE4Uj1tfYw9
                          Hx+RPCL5470YTmu8kyyAOtKUXL08dUe9UP6WvG7dhr3ZzE89iljtvUVbvL3uc5Y9DdWnPYb+yrvb
                          MMi9DadrvQQOmr1Y0S2+ECwUvYv/ir21lLi9p0iQvCCfV75HcXm9f4AFvoZKXL5FMzO9kIBtvoA/
                          Wr5EWCe8ZNgUvvr9Eb7xmIu+jjJQvnLdfr7NRhC+hPggvlDoS77AWwS+VR5Wvf/fFjzpNgm9SK/O
                          vR/+1b2zVR++Q04GvW6x9r2XUqe7VgRbvkfKIb2yJbu8AuKXvdhTTr759xq+aQnfvaCwGbx886q9
                          n6kJvBWFpb3/1nu9SDAIvYphoL027Ci+IZC7vWGJNb6WOek8jL2IvbxtuLy1/AQ7npckPovRDz1I
                          fI69dnyQPFejYj5H/ug9wvNiPZy8nD0gsc49x6APPn6rDT47qac8F1AfPZmH7jz3Sgg+HCnePZIz
                          Nr5b3O+9xlQbPe6AZT3qQwq8cYH+PC2GlT11nHW9UKIfPRPQHb1pbRm8X23UvVMUDb1wOVo95typ
                          vMuplL2koWi9YWyCvV5bbL0vyBi+9xL7vVD7Yzy9dX29lZSnvZ/PNj2wJ329nHryvWg1Njzp87m9
                          TW1OvCdg3DsEeTW+HuKxvLYPgb3hqCy95JMTvn7GJb2QnDo9lcHcu1aOvj0GqBO+Foiyvdt6sDxk
                          tvS9P2qYPJ1JJr6vUgK9L62AvAzNDL4SWJy9LFzhvTEb3b2P9oW+M2k5vgtOnz0jgTk+C2PuvZsK
                          rT2cSiO+Qo3UPdIA97xZqpA9Uzd9vFNodL0klPe70r4Zvhvg8L0Xff29yEpzPVw0ab0mF8q9+zJs
                          vfOTKr4/CrK9Nh5rvQavBDw7Pda9Mq+/vcpCDr6VCoq9qbZ3vDv9Jr3nVSc8KoWUPVHgJz0/OA0+
                          xboKPYQ2LD5dGR0+niPZO6wi/D2EvZY9JGkPPmrZCD4RePc9sQzyPdqiAD5MsmI+ZZdJPp7bgTzy
                          Ya+7aXEZPo46Pj5itts92E0jPW4lBr2fab88P0arvX5iN7zKfxI9EgqlvIgNKT1ncGg91dFAPQOr
                          wj2FM+s8mFu8vX/h5b2Nw3k9oZFMPLoccL165RQ+63u6PbUvg71UwCs+gBtxvas64brfl8k9smwH
                          PrZhdT2w6mW9EarEO9KI2LzyQwg+DzEKvchuiT0B+cS8nx4PPnNI+z3oKDU9tIPBvY1Ht70ckbs9
                          TS/JPYyQtz3rlx49HgQfvYMu9rzwCzc8ft3KPXesZT2o2ha8KlkEPuax2T1WVwg+/ovhPWKNw72D
                          OuM96JQkPSkB3D3lVpm98vjUPVNlGj6fIGs+MJJyPLruc73d/GQ9tD2HPUcrDj6pzBw+7rXSPJW6
                          1LxrQ/89h5muvG6FIr1hXyG9bsbvPetz7z2oVtY9TaCdPHmtZj7NTCy9TW1zuTCcAb5jTLM9RQhL
                          PjvL0zysUNc8vzqxvWfh9L1L7wY+yvi+vVjsQ77WtmS87RxLu0B3Vbx2FJi8DOolvkZFBryH/oO9
                          lQZivYoywLztXJi9+E3APaqXUj0=
                      - 0
                      - !!python/tuple
                        - 8
                        - 4
                        - 5
                        - 5
                      - !!python/tuple
                        - 100
                        - 25
                        - 5
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
                - - bias
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNjc5ODcycQJYAwAAAGNwdXEDSwhOdHEEUS6AAl1xAFgIAAAAOTI2Nzk4NzJx
                          AWEuCAAAAAAAAADTGQK+uDCQvUhboD2lZOG84pPeveCPsjvUZCK9ANU2PA==
                      - 0
                      - !!python/tuple
                        - 8
                      - !!python/tuple
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
              _reversed_padding_repeated_twice: !!python/tuple
              - 2
              - 2
              - 2
              - 2
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              dilation: !!python/tuple
              - 1
              - 1
              groups: 1
              in_channels: 4
              kernel_size: !!python/tuple
              - 5
              - 5
              out_channels: 8
              output_padding: !!python/tuple
              - 0
              - 0
              padding: !!python/tuple
              - 2
              - 2
              padding_mode: zeros
              stride: !!python/tuple
              - 2
              - 2
              training: true
              transposed: false
          - - '1'
            - *id002
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '3'
      - &id006 !!python/object:snntorch._neurons.leaky.Leaky
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - - - threshold
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkxNjIzNjMycQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTE2MjM2MzJx
                  AWEuAQAAAAAAAACamZk+
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - reset_mechanism_val
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApMb25nU3RvcmFn
                  ZQpxAVgIAAAAOTI2Nzk0ODhxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAgAAAA5MjY3OTQ4OHEB
                  YS4BAAAAAAAAAAAAAAAAAAAA
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - beta
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNjc5NTg0cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI2Nzk1ODRx
                  AWEuAQAAAAAAAAAzMzM/
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _reset_mechanism: subtract
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        inhibition: false
        init_hidden: true
        mem: !!python/object/apply:torch._tensor._rebuild_from_type_v2
        - *id003
        - *id004
        - !!python/tuple
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYCAAAADkxNjQxNDg4cQJYAwAAAGNwdXEDSwBOdHEEUS6AAl1xAFgIAAAAOTE2NDE0ODhx
              AWEuAAAAAAAAAAA=
          - 0
          - !!python/tuple
            - 0
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - {}
        output: false
        spike_grad: *id005
        state_fn: !!python/object/apply:builtins.getattr
        - *id006
        - _build_state_function_hidden
        training: true
    - - '4'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.conv.Conv2d
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - - - weight
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNjk0MjcycQJYAwAAAGNwdXEDTUACTnRxBFEugAJdcQBYCAAAADkyNjk0Mjcy
                          cQFhLkACAAAAAAAAKEoRvTqerz58osI+2gDbPfdiwj4cC9s+Qmy8PnrW4z5RuCg+4joyvXtF7byc
                          89I9MtX/vO7KGr7aEVo+hpXQO32Kjr2RuPY9XURJvTpDr7sq1QE+WJS6vRzOOT2eRw4+J4GhPZ6J
                          0D2l5K28r2PEvQ+cpb5etsO9D57uvTHpP748rVu9uPGxvRx3yb1vPVK+KzypvXKeKD73aJ4+1Vsd
                          PvQgqj7pCgo/2uKZPXFHuD5o1O8+Juzkvc4ukT7ZXb8+4WRDvdIp6T6/7xE/SqidPhwJBD/Afoo+
                          h/5lvox7Pb30vE8+hPlYvjaLzD2+dQI/NH0TPkBEoD7tJbE9Viwcuj/VLr73FD88TXOyPGlxJz0+
                          EjG9c1pBPA/9D75m4f+845REvfnUbz3Pf1U+xjGiPuVQrz59JMM9/RPLOjzQxD3fpoQ9ehD0PEh+
                          B752KZu+VMtAPQiNaTsWezu9dxKZPZIRuj0yjsM9HD5hvR0eNr3Lvy2+4Ob1veG0LT0JycO8pKoY
                          vmjHy73INIu9nmxKPfauzr3anNc97u2hPT3qWj2hA7W9Q5yKvvb1CL2ga0y9Z+fRPYobKb2gzDm9
                          QcApPQdPTD6b1Vs9JDUOPoDn4T3dDKU9d6wEvq0Sm71q64Q9JayLu1zx0Tt1lHy80vsqPtascT7Y
                          LWs95ShPvZOD+btGHDi9OSsAvMU5dju9n5I9Uh1gvSZQRD3tfbc9QBdcvvFeuD1aL6Y9xyJsvtiL
                          mbsrTgk90/Jgvr/Rob2jN4K9E7KovprGDb+92xS/tp8BvsVfj77ltXi+HVVzvP3aSL4mKSy9fmJb
                          vdDAfLzJ6H69/fgKPrJDTrxauVK+us93PCUJBT6GwkW87zcevL75gr35Xge+knYiPh9xLz6ve3q9
                          OmSbPuzzxj5+YXU+8lBRO1tXfb22Zkq9wQapvTUx/LzSbJ49EOZbPpQcaDyWPU08PmpTvoci6r7c
                          w1++8fBHvqFwqb5JMKW+Cy1Cvu9zNb1wKCK+H2qMvknibL0kq2u+lq+fvf/oNr75MYi+pMZuvZHA
                          jr3mXzi+6EahvSsa2L2k/Vi+j0bpPBHo2Lzwuh2+yVk8PuDAmD47MXs+FDOLPPvFF70G2/S9Rw4B
                          vcwwV71cv+e8TTSFvQl+/zye3lY9ZBgCPtkQhz4JIC0+Bzq1PplI4z6oPSM+xCEwPr1y4z55SiY+
                          3mlavp2q1r3wdgW+j/1uvcbOtb0t9AU+Z6kbu6VBCj7+MEY9p3VYvnSWRzqfyIu87q+nvekSjbyz
                          u+68eq13PWITuj0vWJY9jGyEvd+7Cb79D7O9t4Kevq4ybT2+mVy9gh6rvpOBob0PmmM8NJqvvLig
                          T70B2Lo9BA6aPSKCrj6VPlE+JRAPPkcxsT5bcZQ+G9u+vbFAA70FRPG8poe6PQFuFT7An6+9v0IW
                          PlG6kz24hyE+g1TOvVAbL70xwKq8FjomvpTnwj3FRqI9kLnSPcN67z1v2ys9N50AvvhCx70v4RW9
                          I4+dvReDR7uyK5Q8SkDIvmXg6L1xpw69wzn0vdVng7s81aK9ughVPWZNfbwtE4+7lXyEvW9RPjzX
                          NQC+4SNAvo0Eib0YlmS+MB6HPTa84r0iy/U6EDgUPewP0rwzdtu7P5gpvgLSyr31/0e9ac25vUU2
                          gj4eRgs+rcmEPTaH6zzWXrA8g94dvSwR2b3AI1u9tEP7vEoBAr45EPy9RBLIPPzLvb1PJPs9H28U
                          PdfFZT1pkqq9bwodvsVapr2DXvq9QM0JvoJzUj3vXzg918xlPHnsEr6yZdi9EIHGvZKvyz0xTI+9
                          rRW5vTnj0r1AOfK8wtyYPA5s3r11sqq9hYl+PY7dk7tZGse8cWaevoT63b0ZBk++8Zxjvhbab70L
                          Vrm9Gp/MO2JNdT2IA2G9X7A1vIBTSb1rZ1E+TuuVPpPaFbwAUdO96XBQPr0JlD0eaMy8rR2SPq6R
                          Gj7mKw0+kdu8vfylxb0ZRJI8lvy7PTG+pz2prB+9NeVXvfelirzOCDC+OvglO4KOB74lKFS+cIK1
                          vXFUkj0Z67+804iQPV3q8rt8B9m8BkSCPHLwCr62n4Q9fFcSPYQBXL3nugQ+3hqIPTVVQ7y7IpK9
                          6ik0PgCftj6ke4E91p+QPsU9Kj6ePee8aT2hPkYEvj4GsNU93ENVPpDYKT00PNY9qjdMPXG6Gr2R
                          Dc29J4WOPpvrjj0l/eq9Z4jlPcybib0tKTS+2DW1Pe7DzT3GQ/m98dPXuubzpD2QFPo8Iz4+vkGj
                          Z72aYUS6GEvDvSc1Eb2oGgg+VJcAviBlADzUV1a8n8VXvJG+X72vyW47ma02Pbda8L3+bnu+r7IW
                          vdAeab6GbLe+U213PmvR3j34G3+96EQrPVV23D1OIpu9w3ClPRahrz1aPNy9YnmpPYq0Bj71/Bc+
                          a9fWvSQQwj1E/F+9ApEyvqxnVL1lCsm94ZlIvMI4hzz2i8M9nq2pvlh4Bb0AmTM+gQAJPGlh0T2p
                          htg8w2+iPZiiDz1Kwes9B0vcvdFjLD1ozuQ9JDw5vtshPL5fth2+OcrqPT8YRD5DUVU9mqbUPSoe
                          LT0Wv/079SkHvlexP71eWYa8BkhTPSJ9XT6eWq89KQZNvdmwAz6+ObG9RCYnvldoszxc/V68wX5O
                          vtSJRr5piJA8DjuMvXaCf72dZX07Iig/vCiXpryLq3W8RrcQva4GJj4RrTg/7ptYPP/mhj4JKi8+
                          xIRmPtbylj6EIOy8Z17gvE3K8b1YQQS+R1mkPCVNIT3Od0Y9wyQsvhYYhb321Aw+8BIevs4O5z20
                          DCe9NfmsvLs6OzxL4tw9gy6ZvQ4Bq70hcjE9BFKrvaUunr5GF8i9U84wvha+rzy3qrm9S1ttvkWo
                          Ob7U2PA5AGB5PS7rMr3bSgI+CAisPRs0DD1n9OE+EALPPbpMxT2LiZo+EvHwPRcbED7VcUE+YxIl
                          vTHcYz6iGQM/wUD1PZAnHT7Xiys+MpuzvMN4MLy98zg+3B3mvY/35Ty2r+w9IZsivpaHlboCoSY9
                          FKV6vPfXOL6J7w6+UNg+vvd7ZLwRMqa9ycrRvUZLMb16o0G8
                      - 0
                      - !!python/tuple
                        - 8
                        - 8
                        - 3
                        - 3
                      - !!python/tuple
                        - 72
                        - 9
                        - 3
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
                - - bias
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkxMDY5OTUycQJYAwAAAGNwdXEDSwhOdHEEUS6AAl1xAFgIAAAAOTEwNjk5NTJx
                          AWEuCAAAAAAAAACOZl+9YzTNvKYD47yLjqy9dNhjvLgyLb59XJs82QS7vQ==
                      - 0
                      - !!python/tuple
                        - 8
                      - !!python/tuple
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
              _reversed_padding_repeated_twice: !!python/tuple
              - 1
              - 1
              - 1
              - 1
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              dilation: !!python/tuple
              - 1
              - 1
              groups: 1
              in_channels: 8
              kernel_size: !!python/tuple
              - 3
              - 3
              out_channels: 8
              output_padding: !!python/tuple
              - 0
              - 0
              padding: !!python/tuple
              - 1
              - 1
              padding_mode: zeros
              stride: !!python/tuple
              - 2
              - 2
              training: true
              transposed: false
          - - '1'
            - *id002
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '5'
      - &id007 !!python/object:snntorch._neurons.leaky.Leaky
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - - - threshold
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNTcwODQ4cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI1NzA4NDhx
                  AWEuAQAAAAAAAACamZk+
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - reset_mechanism_val
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApMb25nU3RvcmFn
                  ZQpxAVgIAAAAOTI1OTQ0NjRxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAgAAAA5MjU5NDQ2NHEB
                  YS4BAAAAAAAAAAAAAAAAAAAA
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - beta
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNDI1NTA0cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI0MjU1MDRx
                  AWEuAQAAAAAAAAAzMzM/
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _reset_mechanism: subtract
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        inhibition: false
        init_hidden: true
        mem: !!python/object/apply:torch._tensor._rebuild_from_type_v2
        - *id003
        - *id004
        - !!python/tuple
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYCAAAADkyNTY2NTEycQJYAwAAAGNwdXEDSwBOdHEEUS6AAl1xAFgIAAAAOTI1NjY1MTJx
              AWEuAAAAAAAAAAA=
          - 0
          - !!python/tuple
            - 0
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - {}
        output: false
        spike_grad: *id005
        state_fn: !!python/object/apply:builtins.getattr
        - *id007
        - _build_state_function_hidden
        training: true
    - - '6'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.conv.Conv2d
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - - - weight
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNDIzMzYwcQJYAwAAAGNwdXEDTYAETnRxBFEugAJdcQBYCAAAADkyNDIzMzYw
                          cQFhLoAEAAAAAAAAUtpXvfQdKz0JbS++Pb6DPfGy1j2IPaE977VMvNTfcj6TIYO881PovTjZEL7Y
                          joy8f8duvlWPxjubneg9tbfTvqnNu71sdXw+WD0Rvi92BT1o/Ig9qZDDvb/tPb08tr0+K+JpPaLc
                          vTzvTIg8XI+KvfG2ZD3RncI9OQUjvh83oj2ENmE+IXwxvqm4kj1xzgo9VjK7vdovIT6PLli9YltT
                          PKBVCT5cy5U834gIPdy1Zr29Ppy9WelEvRjrl70/8kg9FTyPvlQPHb47FvE9QfeGvqVF7L1GJAA+
                          0caLOmYLW7099uO9y27TvaPk7j3p7oG+I40fPoSnoT79fcM9BgfxO6XemD2rITC9+JdLvc6Ogzyi
                          CBC9q6Jtu6OOFz5HI/w9bMiovZWVwjzxlEe7xobsPaVPHz5iUaY+I+bgPaakZj7UIGE+KPkjPexK
                          Zr6E2Bw96TKtusmYAj0cCjM+SRRlPptK0D3/9GM+kb4JvzkhAz2+rBw883npPJVeET63va89EDM1
                          PmxQAL7vxjy+QtAtvtjow724h30+p2SUvCBhbj6PcIU+QMwjPjySrjx8spU92jlSvHDrRj0EaZ49
                          ke0lvu8Y5r3OcKm9m/YIvj8IfD1sOOW9vJH2vQBidrtW5j29s0XDvTlP8j1QLhs+FYiWPn4t8D1B
                          5Ms+2SkRPWJJyL1fIpo80/6YvgR9mr0YG+s9J6rsvQKYmzyZqSk+4vQJPWHjGjwrbes89hqgPXYj
                          SbxJUZ894JEtvNhXfD6sfIy9oYvivXsDkb6n9VC+7/WqPFlG5Lxm1Lw89IfKPCD4jD76wbQ9Ehgz
                          PZP+iL7h/aA8xPNAPdQVGz5saQG8v6SqPkoLvz2H6p888jmPvfT49L3bjk29CfPMO/cnpz2BUok6
                          UBSMu/f+VTxVP0O9emZ0vqKIhr6j95C+i79rvQ26Qb18uiY+SI9fPgteKT6y0Ee9fls0PqMdDr6O
                          u9E9brk/vaXqlr1uFgm+zFiLPWG4Ib21kwE8B2cEPZVOY75Y7Jo96C5uOm+exD0BTim+QO7vPbPb
                          UD5EG4y9lPhzPXEanTw/CiK+TliuvZdXqb6LnWq+5DegPW2wxL0UuxU+zlIzvuXW773FPD++hVH8
                          vT3W0r3M6gG8Wly/PYLloz4LgIW6KbSXvGrkKj1CAXc89EeRPl5RyT1E8pW93/VBPs/LnT3RCES9
                          1eEsPgNJE75iBZC8M3hlPmCipT7SCAk+7PcYvlkBID46B9G9e5ZivV+BSz58EYi+qcXIvQbCtbt9
                          WJ2+mQmFvT2Ht73ldd49HgmZPu61iD37LsC8sqqCPpkhnT6WNPA9N5kPvu7LZT2RTtG9yx5KPRTP
                          Gb6Vdu28xrwoPQl2VT3qd3w+5V3rPcvjNj0gJTW+w4E7Pq9dJT1CeMG9CC+rPYt60T5zEjQ+AwE4
                          vl9FoD3Cg9q9SUMpvkOpZ77PuRE9rUxnPW7zg7yCHZy+KQKOPeKClrxO2Ls9FS6dvUP9IT2BBIw+
                          D4CEPq6d8zpRbe2993YHPtQ9szwwXR88WmldPWhAHL3tube91yziPJVkHj5Ug907Hz/HvRp/hzxR
                          MIy8KWs7vXhsxTyZYHa9R8aPPToUkT1c2Zo+s/OkPt8FqTzADXU9JtadvkRwF77s5ZG9guvbvb8R
                          l7s3RWu9MR6Jvt5bq77HFEC+ty5kPBhOQj7C3ZS875JRPUhfhj2qYSs+GEgWPjqKfT1GGgA+7Fpg
                          vsElGL1o07099RgnPo96+r27S2u+BIOwvUU+PbxxI0u94CRdPrTfvz0SDw4+aFIPvjMzwDu5q/c9
                          iNJ4PokXeTw4Z2W92Y6HPU8E7T1Lqoa+URk6vkrvbD2QIfG9Aze+vizITL0FzR8+hoBLPsFlmr23
                          s16+dirLvbo/Az7OOMU9sO9qvYam47wcIg8+shqCuzVNer1l0Qq8OvuxuoHQKj43spm9SK9VPQ3a
                          7T76gDA+kanUuwmNr73c7ea92ulhPraOaT5DxMO7ddYRvph1Wj6xUQu+qA/xvYQRXj7GHDO95cN1
                          vmJXNT41RvK9wsEQvpEkDzwS5J0+8p5DPphLzLwWCV67Le/oPVd81T4ohEk9oPjiPUqazD6ecku+
                          0w6SPSCgLT6UQqo94SUOvs/zQ72c9qy+hXMbvnD0fL243PO8CNyJPux9FD33146+y/O6Pb2Y+z5V
                          1aU9l3U1PkclUT5o8s49SGmRvbPo570eADq+hNIoPDclZL1x69y9GhLPvX3Hbz7iEeQ8azcvPUzE
                          L74tgwK+FtWtPoUaKz7Epju9+AXkuSS45T4/wqS90N4gPhPvnr42qTE+h7Y/PEs60L6If6k9Qgi8
                          PdHLH70ispK9g20wPeUP/72dQRC+ogb2vtodk774F6g9lggUPvmcUD4Rmbq9RHUMPB7nfr3admc+
                          /jCdPm58nT5BAiq+N62jPrTICD7gN4I+MfNbPQOrgb07j2A+4x+avncu275x9BY9Sl0fvuF+5bw4
                          LBO+7VuoPUl0VD60HSU+J6bBvfk7yD3w/zW9zXSUPvx1pLvr78E9KTRDvnAiUz36a42+pbirvmJm
                          zL4GyqW+1Ot6PH9zK7wR8vy8KBvGPThyzr3Qt1W+HcCPPiSjq73Gw4M9EUWJPuDgRz7an4a9b/0i
                          PgMsUL5Sdno9mQH/vY/2u76DBP89rA/lPDsoZT3wGqq9TfIZPhwRuTzF0Gc+YsQmPsYeDb6sRb09
                          oaFKvuWLeL7B2IS+vPDGPW//PT5ezYg9hqlCPjjabT4VAHO+EOAivmwPy77eHUo9yKXyPYFIDL5x
                          ncm9LUdCPQ3zMrsJYsq8R6Ewvdj9nL1gtmg80Z2yvJT5nz2Eew4+yItnPn1nrT3HECC+ssdkvkak
                          2772FD2+9ia0uUtvaL2tNcG9V40ZO3bSB73UK1W9KNQovV2jG71iFnO9lehHPTXpgj7XFR29ev6U
                          Pr4a6T1YgQC+1nalPQHGKr6nyxm+ckYdvdEg4ztX7hU+rDk5PY3LzzqGixg8We0pPn9/W72XXWy+
                          ixHrPRzddT5y6Jc+HZq6PWk62b3nKww+JVfrvXNyhr6mCsW+0AXNOtyzVj7hU8K9wAkdOqxRsry1
                          Z7W+yn05PuOzRL3KYue8Wm+DPXEJEj7Tst69InI5vLRvpT03PeO9O6qcPD7tUj6O+gy+CNCFvH/k
                          tb6hCks+r3BAPecDtb1QZB+9xifBuzxeBz8irf891ZlXvQ4vsD5RXEe+no2hvTOkDT6FlDq+vEsp
                          PoiB1Lw/Yae9tKQevo2S/z1NkBg+aKKeveHInj38Jgg9mPEHPoW+Lb4tKQu9PnA9vi+nlTuODro9
                          RyzvvfrYaj0b3+A9FhO+vB9Z0D3Dhqe8HH5ovoLOwzw6Zo0+Q4VXvom3NT76M2s+sxEGvsld6j3d
                          8+A9MhPxPGGcjz5/yJG+yVD8vdxGoj092kK+aED7PVC6rr0BCYW8fuo5PcN70b1Plmo+qmp8PuIO
                          BT1DMwK+BNQwPuDvQL0psGe+FnmNPg9r+DyCqUc+G2TRuxAw9Lz/H/A9uFgEPOgvWLu3jZS+rxPb
                          vUKO8bylmHa+UlREvuT+WL6rR6e+tW1qPlXwQT7p1Yw+3X1fPmWreT5RjEo+PeI9Pi8Xgr3SLrO9
                          OIaZPUOH/rzU3ru+FGNbvgMmBL7Q3cK94cWiO6t7yr3g0Oo8ALHNPb8oPr4dl0W9aOmdPY3uYrxx
                          vP08PgjMPbOQpjy5NNy8grmYPqYhvz2Njii+09A/vWd8S75NGHW+CRRfvXUh771S3jw9x0lxPn1j
                          vT0j8yI9VZMHvhnDOj1mr3s+OS3OPW6Syj0aENS9ZUS/PCcG6L0Go6e+a7GSPXgB7j36sly7RZRf
                          vP2UJT7eZuO99E/6PYlbub2IhMe+VluYvIKSlzwajVk9ir5SvL9avjwcQAy+MYAHProBVj6vT3K+
                          m1JZPl2+JD5/SWY9ydtVPtU4TD6tXMU9/5DNvNYDszwljjU7sJkPvrYNLD499MQ9+5fCvQk6vb0T
                          d0K+pldAvQb+cj4xJJW+dUHxPWqgrDxGGKo86ee7PYScgz7nhiA9SI+bPY3ny7ziC7c8pSVXvpKk
                          Hz6opS8+eTQPPo6ysb1Tj4c9Aw9TvXufij5MLPi8DSK+PaRTNj5S0OY9VhKTvR9NQDy/wa49THRm
                          Pn8skT05qOe8bvxCvahhZz37kQw+s7gZvuUt3jyq4A2+TUwPPnlEgb0RE+y+E02cPu3Bkj10naS9
                          3GUPPuZetz0MYdC8aaG7vILdLj6Wuou9IuQgPoaY9z21Q8c9jvIfPpD5CD42iwk+CcgFvkBuQT54
                          uIk9QxyXvam+MT1QeSm+d/YZvdT6GL60wG2+c2IOPpM5Yr5SZRi+onqcPs6psD7Zpo49T7T2PYBf
                          hz5OPzc+SMUHvVYk1T5QQgM+tQ0wvgT9bD7sLtU9PdAdvuo07L3LaEY+Gw2fOxwevL1UDf08rgMN
                          Pg8wPT/mmAG9DloEPuYmtD6jPlQ+f2z9vTB8OT4zzOo+2aAQvTJVCL4jOci94OUvPj8EOD4FJg++
                          f1aFvcVC47uMWBq86KzwPveerLwurRQ+xf2iPVRpfz3ldS2+tM2IvTUkGT9vVMk95dyEPbNAijta
                          iAW+t0qWvQU7qL6M0Q68kv58vrjy1730PqI+LtcIPlecurzz9Yq9tC+9PT71Bb5Af/W97+sOvkYP
                          2r2iIkc+6uySPT4DiL7xL/69SndyPVxwz72MGR8+y/Zovizx5zwLNEo+TmVBPnMagz3bMk2+0xQm
                          PbmXor4HU+29WAgxvgpklL0gUpU+05YgPoHYs73Qp/894GREvlxTBry25k+8XLcQvQBcBD6XmSg9
                          8GdyPl4uGD7UdVm9h63GPh4J9rsa0lS+3H8CPoAyO749geA9TLNzvciX1z5R/RY+I8e6PW+5OD4k
                          L3k9DByMPXs5IT1kL+Q9aw7DPclQiby/Uk+9SFwZPSQcs75bPmS9XUmrvRFZHb2AHgY+QOjtPdw4
                          ET0vQ6M9Qeq8Oxa4hz6YIF2940WqPQHruL2iL1O+dXEUPD3HLj1amsI+CB+UPhsydj6N1ho+awCI
                          PTLIBr7WIuA9irdoPhjtsDyE4q+9mCZ4vksuur0lKNe+xTVxvtalSL7vCY6+lRajPZF8Mz5K39w+
                          zO4PPsIogj7aLZs+Fy8uvI1ksr3w/wc+hMd8PWYVZr0ZFha7uBtFvTdeaz2VvOE9dYx4vX1VCD5/
                          Wqm96izIvXMhSb2UPY0+2PFGPVqBgz5sFKA9MPzePSNRQL6LyzU+H7QQvXQ4tL3c/m8+Ql+0vUou
                          ezziiSq9LFPovR0gL72a90C+HV5uvZhtcL3X3Es+24kwPq8bGj67Zyk9j9kvvbs6Ez3TVZe9Zu0J
                          vnDOoT2OPR091cMjvmfGRT5ogqO99GIxPoXG7j2dW6g9BYxIPkW8H7zsxSc9gaIOPLLESz73X5s+
                          PgLnPK/LKT5/pHk+o4CXvgt2hr37cxS+dKM6vrE5Zr2ASYO+6W0TvrcYK75k2ym93YefvUdagL0J
                          qhU+DaqSvXGplj4A5zs+Ni2rPJZslLwNfmw99dIZPmoYtL5CGPC9OOBsvfruJT3rSz495jhGvsQF
                          yrsTIEu+8YcRvZL59jzzZeC8bSu0u+SthT5Jz7U9R8v0uqCpFD5at4s+fuKQvkVHzbzUtJK8cmKY
                          vnEE3L2Kgxu9GCxSPQpkej4HXjW96Ej1vZpBZL3G4JO81E+XPSp72T2ck7E9ca0kPdtrGj1t7YE+
                          BjIFPS8oZ73Srga+xA8PPrfh6720Hms9XazDPX5tlj3SOc+9DlefPWW+wL2j3pK9UDPBPcH/hT3P
                          xAW9dGOTPp99DD5Eh+491wWlvAhFe7sd8og8waGlO5SjFzwIQ7i8sCievYh3fb32OIy+xEuJPF+F
                          KL3b6l++pM2NPeyPpD1wXYw9SuWEPat+wT3RAkI+Mzk1vMPwqj3xU7E9Jmb/vdg7br1J22G+VyQZ
                          vSnkR71Vx9+5xZZNvjm9Sb0ZKTS+Ml9WPXwq3T2gR4k935eCPvIBDz3yIEI+P+qevnpztb77ohy+
                          kSXuvq9N6b7ER++9TjbaPK50k715xLK9BwfsvULD8L3LMz6+IEUCviuO6b1IXCm9ia31Pf3sMj5M
                          0wY9
                      - 0
                      - !!python/tuple
                        - 16
                        - 8
                        - 3
                        - 3
                      - !!python/tuple
                        - 72
                        - 9
                        - 3
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
                - - bias
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyMzg4MDY0cQJYAwAAAGNwdXEDSxBOdHEEUS6AAl1xAFgIAAAAOTIzODgwNjRx
                          AWEuEAAAAAAAAAB5+vQ77ZJnvZYmYr3MMqG9nH/Hve77c7vs+00937yrPeSZQryhPpU9VqqAvWlU
                          xD0gmxE9h9PBPer/5TxtZb49
                      - 0
                      - !!python/tuple
                        - 16
                      - !!python/tuple
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
              _reversed_padding_repeated_twice: !!python/tuple
              - 1
              - 1
              - 1
              - 1
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              dilation: !!python/tuple
              - 1
              - 1
              groups: 1
              in_channels: 8
              kernel_size: !!python/tuple
              - 3
              - 3
              out_channels: 16
              output_padding: !!python/tuple
              - 0
              - 0
              padding: !!python/tuple
              - 1
              - 1
              padding_mode: zeros
              stride: !!python/tuple
              - 2
              - 2
              training: true
              transposed: false
          - - '1'
            - *id002
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '7'
      - &id008 !!python/object:snntorch._neurons.leaky.Leaky
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - - - threshold
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNzAyMzA0cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI3MDIzMDRx
                  AWEuAQAAAAAAAACamZk+
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - reset_mechanism_val
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApMb25nU3RvcmFn
                  ZQpxAVgIAAAAOTI2ODkxODRxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAgAAAA5MjY4OTE4NHEB
                  YS4BAAAAAAAAAAAAAAAAAAAA
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - beta
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNjg5MDg4cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI2ODkwODhx
                  AWEuAQAAAAAAAAAzMzM/
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _reset_mechanism: subtract
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        inhibition: false
        init_hidden: true
        mem: !!python/object/apply:torch._tensor._rebuild_from_type_v2
        - *id003
        - *id004
        - !!python/tuple
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYCAAAADkyNzA0OTEycQJYAwAAAGNwdXEDSwBOdHEEUS6AAl1xAFgIAAAAOTI3MDQ5MTJx
              AWEuAAAAAAAAAAA=
          - 0
          - !!python/tuple
            - 0
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - {}
        output: false
        spike_grad: *id005
        state_fn: !!python/object/apply:builtins.getattr
        - *id008
        - _build_state_function_hidden
        training: true
    - - '8'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.dropout.Dropout2d
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - []
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              inplace: false
              p: 0.5
              training: true
          - - '1'
            - *id002
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '9'
      - !!python/object:torch.nn.modules.flatten.Flatten
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        end_dim: -1
        start_dim: 1
        training: true
    - - '10'
      - !!python/object:torch.nn.modules.container.Sequential
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - - - '0'
            - !!python/object:torch.nn.modules.linear.Linear
              _backward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _buffers: !!python/object/apply:collections.OrderedDict
              - []
              _forward_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _is_full_backward_hook: null
              _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
              - []
              _modules: !!python/object/apply:collections.OrderedDict
              - []
              _non_persistent_buffers_set: !!set {}
              _parameters: !!python/object/apply:collections.OrderedDict
              - - - weight
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNzA1OTUycQJYAwAAAGNwdXEDTQAsTnRxBFEugAJdcQBYCAAAADkyNzA1OTUy
                          cQFhLgAsAAAAAAAAlsdlPCBIvz1nyLW7SDgEvsNxy73NcFU+5h6lO19VD76K6OS976XNPPMcBz3M
                          UAk8TxcQPl8wbL0PDsg9PN23PuGAnr3XEvu9IhkUPfXfXL3DkYQ86OQ8vj8deD2wyYA+o1alPc3L
                          5b27BpG9X0QMvmT6or33Pje+kFRkPOzuIT7Nxus9APT/uou2wD1RHkc+4l6/vbvBaD6BNqe+7Or8
                          O31io73VhBo8JK+Xu+k5brtYoRk+tjqyPZvkyb7uulW9PEsgPHaRdr3yHii9MvRdPa+P4jxOJlo9
                          sCSivf2AHb1nMxA9/N8YvXCxLL5Zybw7W6x2vNPBuL6I36m8McewPeSi8LwRnxO9WadnPGcWl70m
                          nXS8gAKfPc8yIj2igpW9gOj6vOBf6LljSfg7WIMvvHUBND3saC88n6h8vWjXRj5n3Lu9J4TBvOSQ
                          Br3fuJg81t8KvWSpn7uMg3e8lu0NPm8oWL19Exu+9OrOvQqTlr2t4bq86LiuvbXNc71F2809NOnk
                          PUG/QLpNzoA95BeFPqme7L0EZtU9TonpvSXFPr5IzkS7kSAQvmjyYD2y5/I9DEXiPV7qir3bK489
                          b55EvQAlsD1tNrq8Pmy/vUZr472nsye9WEAePXoy0jwlwJg9RNkzvriiBT1mgS49COBlvptRib3b
                          JXK+YV0Pvq/hLj0tgCO9QNKVveu+i769nUW+IcG0POcJSD71RCA+v+yZvS7h877oM5W79zCCvlWv
                          srvV3Fc9j0eZvbKTa75xAgA8FwAIv9yfg77ecqa9FxMKPTervTywIj48XzDdPWTHmr3j7qC+OlGI
                          vogdSzymKYO9Bl7bPX3Gob3pQBS/6zervvlqF74B9UW+mlyUPeISbzz1WC4+zo2avSPcnL3h4xy/
                          UANzva2dOTzN3Am+M7LZPQQcGj7Dr/y969S5PIbaaL5wQVU+TFTWvo1m4L0tSv497/WBPRLEsb2T
                          tm++yF6hvquqhL5OeeG9wxO5vosvhr6OESm9BVqxvgLsxL1bAXC+8JexPakdjb4x8vo8Q7ADvuRJ
                          Y75N6oW7RNk3vRHnPL4Cugi+gNItvpPVAb+6qWE8C+d1vUFdhT2f+uo7dh3Ivom9k70iejy+WGlk
                          vq9o/bvPhhA9azADPhKTGb5yUmK979+jvnwfDr4fDdQ9gJM9vp0/771tFOy8zbGxPSkMTT2wkKG+
                          M1SkvKkSnr24WRo+ZmFIPjRWjr0SO6i9PC4dvxvwzL4Pcrq9lvZSvuKWLT7gtwi9mbxGva8gor1s
                          zD6+ZIF6vikHBj3+/Um+b7LiPTf/jTttYqU9CJgGvsGJAD2nsP2+jh3APdohiL3lpg8+A+mXvnP0
                          kj2Wo6q+izatvmvrzzyo5N+8UwTiveReNL5Oi8m9ASk3vhF2UL62PvK8PKhbvq8ECL7VMpi+Ub4n
                          ulL4frv4QgQ+jtgtvp2T+r3ODMm+OvMLv2IQmL0cS1E++3AaPsjKZrzaTR+/gkTEvtLtLL+xLSu+
                          EJJrvX0ZjjtcSBA9lbNvvSKe0D0H+je+Vxf/PR8Pu77dI8e8Y0SHvRKIQj2DXoG9HRyxvmISDb7r
                          Aly+nEsoPpb7nj5cuyS+XaQ/PbXrKLun48w9gkMuvpZkI7+x73k9OyKavZy+Ar54CIQ9s3oYPhJL
                          Ur6x2Te+VjFuvnFTA7+w1/I9da6yvu81tj1X71q+u/LVvS5Qib5H1mI9C+5BPXwhxz2fZ/s9V2in
                          Pajfbj7EVsk928MRPtOXoL4cKvG9nf9uvlG7Nzw3UT48FF8avXOGnD0XhJk+Cq3FvFYVar36i4q8
                          6ByWvf/2ejybdxk+ZpY9Pg8pxz0Hu5498dgJvkWY2Tv6lIy9iXDpvIoiNb0lSpc8nJaZPcrI57xj
                          sNg7B3JOPtPro736Vx69zSdJPrDYp75tkZS+B2E6PaFMdr1IPT6+etGWPV6pJT5dJp89ucRNvggf
                          hD0GthM98Y7TvK+EpD0g8qI8mQUwvmMojD33/Zy9sS6XvQFSZL6xACK+BMOovuQfy71Siia+RFso
                          vWXltjzdZZm+kEunvIfrQrsYGq088dopvcrHBb1c4CS93UBuvObefT0Z6hm9YihfPOg/Gr1K25s8
                          0lQfPHXRnbytJIQ9G6DGPegSBrwa21o8NyANvb2OxL2jYs07CBvHPM4CbD0DB8Q94RokPaNSVDya
                          kJI9uMi8PCvHpLyOXBi9f2aYvVwjgTwv9Gu9wu8hvKLpcD7l/bM9dOwFPOB8fL1rqIY96RR0vniq
                          tb2eTrA9MffavRpPj73eC30+VdwoPU9WoT1rBkS9mbX1vPfcGL5Tocq86AulvRUx+r0zDk4+nuQB
                          vtsPyTtRurG9C9TDu5VTMj0/cEk8P6O6vQMxOLvtke886+76PFC6Bz3c5Mq8U44UvtY71T2B0848
                          k+2SvB/Xhjsvyt69u0FyvIs5Hj09cpG5jAPrPaSIuz3hJus9VIlfPh3Or73UvhK+3z4/PhOxob3J
                          kHS+V5osvdHjpz4u7Bq9+ww3Pr+Vhr55kWM9dEoFPXQJQbz2Raq99dy+vcY0lrwjzA0+00oivuwE
                          Rz2c+bI9B6tBvb9oND5iyE48dIuBvUAQQr4Jy4E+s6KdvaPmRT3e85a87pOKOwLkcL1td5S9PQ7P
                          vhFB7T34kgy+XZWLvIA5nzzsNgA+VKsSPXD7Or2iqPk8bQUcvvVrBbqJviY8luQXPMhqjL0N3Ag+
                          /MCNvXbqAzsb8GK9tijlvA63XLu+V8q9tbnTPd4Kwz0Tuhg+0gQFPiSI37soiMC9wc8BvixmgL0x
                          zQI9fLf7vA6xCr3WmEY+qfCMvaNYxzxBPT+89SA2vpiRu7yye0M+K3L0vMO+nj2+Pr+95LNZvTwu
                          V7zO1QQ+Hd1gvTBYjz3ik8u7VQdxPL3aTzxRI/08JmQLPsnrv72wgbC9kzQ5PZUu4722gGy87yUZ
                          PMWuXj3FRCK+S7XQPEjZcD7odZE9PTbwvWPd3r2qYGK9D2xEPWsHlb3b7fM8WCWBvZyfTD2nUj8+
                          2Jr6vPzxKb1WcOy9YSrMPTet/ryaKo69vAq6vSW7GDwBTcA9RtOovEwpuz1PJcC9kDnsPK8hy7zJ
                          9ao9zk0cPvQIAD7fzJ077Qd1vY/D272Z6Bm+cR0evMR0erwIg0Y9pe9ZvVvzo70VB5499R68vS1V
                          ir2IZ7q9JznYPM/uPbzzz1I7t+UzvjwV6Tojt3G8o04GPnExC71sNC09UZiZvRKNwL2yRz69bEuT
                          vGjvcz0YoyQ+ZbSDPeRBPL1PMoa9NHMVvqRpYb1UtQI+PjiPvvBjjLx3ljg+v423PQN9fb37qL89
                          c+eUvah4Ob7QJ3++lbQ/vTtY5jws5Bs+rlpePe65cbot0CQ95FuYPtMciT37Sty9nYc/vrDyjL0k
                          Y22+MZ+pvIWFaT3MWLW9tCo4PV1zL70WXfe9vQK0PYmBqzyfAs+9Cx01Pdlqtj0SXok9/xmevVM3
                          6zxclmY9XeqZPXWLJz59puC9OTolvZEszL1L62C+FkjdvTfTSD2sgTA7RJ4yPmLouD2idyO+LRWI
                          ve2pirwApiy+Fo3wvYaSCL4gnws+eV+/PU9BPj3GigC+ELO6vWb/BD7L28W8FFYBvACJob13KIa9
                          9yocPkECfD1nI7C8bvmOPdRJvj1I9Pc65TKPvmiaOz3Py3Q95jRrvgbB4D0efTo+OQHIvWlvwT26
                          y/e8kQ6UvbDLk71vzuK9nKEPPcPeNL3FV3I9Wq8NvMoBfz13lzo8/CuGvBJb0byLaEG9UQ0Iu2Hy
                          hDym2BG9X/ulvIaKSr1e4QQ9pQO9u0jaAj1gHsi7m2Q0PWBknTxtsOq8uc3mPDojAbzbRz28wVcm
                          PboiPT3UAwQ9EJNJPeDInTyICRK9QFtRvc4N3jsmLbu9c5GhPAgSZ71HId48VK9Gveceq7zHqSK+
                          BOPqPL3Ksrw4e7k8e/6SvSCFo73VgVW9UGmMvTTmMb4tWY29IufPPbJAIj6x1q49mYPEvRAzsz0/
                          A4i9SE7EPaACUL72JgI+17CqPUuBi73uJ/O9YWNkvWuvGL1Xlcc8GLkwOvHfej2SdfG91rUivRBW
                          bTyd75K9am/dvWeMBb2CfR+9wSV4vZJjVj1AgTG7rCFGPcb62D3J4qu9wNV3vBm24LuX/gC9pSfH
                          OpQ2kT0t6bI9ZRL4vVi+AL0y3y29zliFvByZfL1Fixk9x6BmPZ6ylzwOH/C8WkdXvpA4qTwHIAS+
                          tuQVvCXcs7y3RB8+wa5hvrhbpD20yk28kg2OvDPVvz1wNqY97xksvb+4hrxNMi29YO+3vT1HtTty
                          a1a+r0QOvibzMj6qf3m9ZvO4PS7EFz0Apyy9n+hYPQn70rypptC7nTWEPjH16D2htIi8gE7bvUN/
                          gr3N61k9NNG2vSe4hr5mSGY+E1yjvOxprj1NsJA9tw+DvCIEQL0usIM8dFCQvJi00btNRDO8N0Ys
                          vcB8r7mqmcC8Z42TPDj+Q7zs9kG7zYUCvUhTzLyToHW7abY/vFQ3yjyQM8a8HS4JvXSq3LxkIUC8
                          zq7vPCLE4DsQY4+96H6ZvN4ci7yFVJY7mTOFvbBphzyNRle9jyuDve3dsz0QgW48Jts/vXJl4Trz
                          9dO9ZZMuPWuLnTzL/xS9k/YEvjnogD1h8FU70zzMvTIloT2+pxw++H01vhE4wL3AZia9gZOgvVTg
                          PTzKKo07M2GFvSFGLD4gxDo+wObzvTupAz6ArcO8bXurvSnJjb3fxsM8tFvdvUWGT7xcyhI9KEuX
                          PT0d8zyCdYu94ndnPdO7qz3vgOK+MX4YPVbzhD7KZ5G+UE8Ivo7pQb4U7J69DR9JvkBqOr6nDGy8
                          F1kWPn0hlb4ymsy9YT64vofhjL2e2lk9gc+TPZ0P1LxmFuo9/4NJO1ngMb5m3xK+lgUuvkP/jD3/
                          DZ69kmJMPDo/Sr53jts9M9ThPSx+ST2RFDG+JR0WPcobXT1i3dI9xfNZulgwFb8m5em+81GmvX7+
                          pb1oCb29SnpLPRbDA7zsRbm9QEurvYrowzzxWpG+7SEIPvGojTxe98Q9Q8qTvSP8o736oiw9SLEa
                          PvUAjr7yct66OXimPQHm3b1XRQe+S7Qsv9D2A75JDtq9Q63APEaaHD5ZFv06begOvij2+j15yVs+
                          60ZHPrjPur3zla49/heVvEU9Db3VheM8QrHGu6daJD2PJAW9ja3+vLED/70tayS9aZahu0xTAj5t
                          W0a7aHUQPJT1Tz3hJLk9CfcuvmOG4L5tKZk9kcOcvDd6rD2ov3e8h1zVPODORT7w9D2+DZlNvZiK
                          /L1gAaE8w3MNPuxPAb43naS5WQQ+vnQcgr7dsA29uzyuu1wOYjxo60k9oBZEvYweGT2tDjq9VezA
                          vFScq7zwLFS+uNp/vVq0cz4a3NI9YsSqvUIB0r3RiB29FcmKu8xieb5+YZG+aDUBv83nO75ZHaG+
                          WJZxPRNr9Dzilli9qgv9PCGUgD1yky4+MtbyOj6gxbv1bC0+osbevSc7g73fTN08DNukvpToXj6Y
                          Y6y9MYp7vZwmFz6ihJg8BIecPOEAH71p66+9wDKavdFdHrwv+lU9Cmt6PsT7uz0LQ4Q9fQSrvNKg
                          J77F0kE8vlHyvEHZ5j1oBwu+lJw/PZWKBz42l+k903zaPJDA8D1IOUy+BXq7PdDxI75ZHh691rLc
                          vVJmBT3CRrQ6bRSEvXsAqj16EZC7rnwrvky2iL6m3Rc9oV0mPSGnj70sT189YNDqvMwGaDyd+sC9
                          jo05O20Mwz2EGzE9thD9vavGAz1UbiO8vJjWPXsK3L23L4u982EPPd0sST0pSjS9ZeUePJLORrqW
                          b2I9r7ozPbVmhL3CCi68M+qYPeDeGLz89um8hqAivc59s73YbIm9bgbgPL8rQD1P2/08ydd/vfLg
                          KL1J3k+9duELvb6wnD0rgws+Q4OoPWyUSD1CZp69V4PfPKyT8rxAbBc+XkCxvfGUnL3eUBw+y9/3
                          PQSKQzwVTf09v8DVvcJP4r0Zbi49hdSGO2egMT3gQqw8IE4TvsSyZDv9PkM9RsWsPPciNr2pRJy9
                          GMPBvEC1jr3AqnW9pYrbPWpDGr0I4+U7bentPMTpnz0udGQ9GHmuvS6kzL3moYw8VtXUPNjEub0w
                          9sm9CXOzvjEO/L29NR2+9gzhvuNUUzzsdL49bQO3PaIU4D1pNgy+08WavdBKND47/5I8vC9Fvc73
                          KL+0qcC+ta3Gvb+6Bj6G3g49SPDLPDSdjbs2pDS8uhCiPYEs477t+TQ8N3NjPnFKrz2ZTiM+aGyF
                          PeR1+70FE0e+U0YXvZHYnr7iqZA+2W7qPmqHAT5SAag9S/dYvJ8pk75PeeC9PxRFvqGzBz0x1Y28
                          kyv/u8OBNT2zIQC+t8zHvObH274qcd2+NyzRvZ2hEL+JJ9S+JW4XvvKrXr0MUKU8kqGKvUQEp75z
                          dNy+bOgWvi4B6b2G5MO+w04XvndGTLvg7vq+yf/RvkonjL5i6Ay/v/PHvdHlET2+QDW+SG5IvZve
                          WbwXoos+2YUtvjtVk75dEzO9zNtDvpe3p76YLZu+SNHXvaaCAb5HRqa+x17BPTxEJb3s7Gi9+uuE
                          PVg4vryheTe+Sj7VOq3Kjb7D/Cg+7UctvdyWS70ywKQ7XP8jvUgH6759xBK9xJ8Jvt04SL66q0c+
                          tHwCva4izT3GjaE9AAj3vaLjAz6e4me+mPWMvGBH8T0qy3Q9oioqvsH4Gz0ey248W4M1vSpei77R
                          7HS9YpwOPawCCr79bGa9CGxcvcTxrrzxhhu9Jaiuvm4beb0ForS9M5dpvd2Wzb0SjKg9h8y6PdKf
                          db55LXG+vlFUPFX9GL4+glS+NhCivd190b29Loe8KQJBPDEFO7526Lu+BVANvt2Sg75AvZ6+pYyD
                          vA+Jgr1UF9W8mZMTPYCwwT00eZ69Ko3HvZY9BD3qKA6+jofWvXYrFr0F29u97aoNPXp5oz0szjo7
                          zxKiPHNy1r1sML69Gha7veaDuL1CNi29MAK+PWxNcbw7MWS99HskvjVG2L0XOAm+KLwNPkBAd76W
                          tFM9nH3jveP0b73oE6a92y8yvsGMBL4Ebb++Y+YMPaslsj2XSsW907wSvj5yR7skWUi+Ebi/vWbq
                          5r54+JS+CVZUvivSrTzBvcq7sxUhPkREbb6hCTC+nMSLPZ2mG7ysMe68/cMCulmYdLyZppc9zBW6
                          Pf2Khj4+Zi++rmxRvbU0sD31+lo8s3SYvM634L4PpVQ9v4nqPYeBYD03ADI9OlxzvdsH0b2+6Yy9
                          1EUGvaRvx713QmI9/wiBvITSTz3kxe45S3qEPcubKz5gNjw97oEtveJJmr1ZyzQ8D0gKvnK0ED51
                          hVE6CdQGPBmQ/72Hl4w9SV9Bvp1/hbxlQhG8JVqfvOONE72FZbm8b+csvb5Ejr0pCQq9lci1vfwP
                          n70r7Uy95RKNu5iVGL7q7pK8vSdQPW/1tLxl2m6+ic8wvNdh+LkOw6u9prCzPV8o1j2hBok9Jp/+
                          vfa3vj25pNg8dCLmvP/R9TxYz6q9mJcrvdA6qr29n6e9H0fGvYAfqrzPEH69d+4evAJxbT1GcmY9
                          ros4PPmc6rtaV+09g0KgPZC/Pr1vv+y9BxrMvKQ7jjxzobe5KRy7vIE8yjyqOow9suduPFr9mD0T
                          G3A9nyKKu47/Dj4wNOk9CFxBvZZDsL03bYm99hT/PDrtRr0OjjM+x6wSvvh4Dj23SQk9dhjhPaRg
                          FL3N7O49PvePPKL1nL2a57+9tbY9vXnSvTw7nFc9qejVuw8okrz7FVQ8AAQsO/icCr0vPeE8V+iE
                          vefCP73wFBY852YLvajRtr2IfAg8qoWgPZTMHj4UqiE+1ZzwPDhUCj7xPTw+Jn0Evi5n17zEeyG+
                          EDI/vuZrVz3bqc+9R0rGvSR0Qbx738c9BkoWPtLcDb7drvA90a5EPuK6gr2BBym/5zNVvSkTNb3/
                          ww6+7daavZETFz1t4QY/zE1GPid8kj3Wyzo+fxGOvG6q3b0ihXS+P3zLPZddkD4eoTk/oXaMPhfH
                          nT3jEPw8MpeRPYDcIr74h0g9XZuAvUWkND4cVYI9rHP2PUjUujz/NaO9oyPQvfrqGb7kLq67rFCe
                          PLFaPrxPJIS9bomCvqmgxL3FkFI8suCRvYUBYb5wPhg+SsFYPNhpITzCPuW98hqEvl91b70Gl6A8
                          4c3GPAnyqjtL8xQ701qXu/SSQ70s7Io9VD0GvXXm+j0IVw48Z5ggPaJtCb1qB7S95ZbyPWdOvb1Q
                          hAu7tNyyPRw52j33YuQ9k0bruzKdxL29rzW9vhm7vTXahT1mSTs90cKjPUJtDr04CY67Fyq1vHdM
                          kT3Zrlk7IWcKvdnXCT4ViN895wwWPsfOsDzbqJY7eh2pPfUYyr0pUUY8OaHCvTcvqTvxbbO8N9IY
                          PuZzH736pde7tLGovYCqgr1EAG29eRmavbnKWby1Jgi+sJfUveFpTr12qgG9HneYPeRcrT1hyAG+
                          ol+XPZxxAD6CWsE8AilxveBg4D3NUEo9QkpUPa6Sj73yShu8X6bnO3jqkT32zw6+oSGxvebP672Y
                          Ib09w9KHPKT15TweTz6+BjNVu+NZXTywYDm8rwk+vZTqGD5P4Ac+hg9su8aan7xovKW9eMxpvfjI
                          QzxZHiY8zgW9vJeJ+T2J9Be8YmI9PE26rj1EOLw9XRSMPVrFZr711VY+QAaJPtH4l71VK9c968si
                          vrQuMz1a8za96P4dvTPOID0oDfQ9VmOTPPo+2bwjaDg97qVCvSD1gLtqJwe9OgCBvPaoCL07F/29
                          njWFPCNp/L0fbam9X3x4vU5DYjt+D6o8yAX5PPlPCD0eNe88Futavfo8r72EK2g+JgevPXlAUzx4
                          EiY+eXysvQhbZr1G/5g9U7DWumKoXTze0nm9hyAEPUAV0b2ev4+96SsJvfRJxjyHJfI7EjuhPMXN
                          kbwThBI8cwlFvkNobL4ImGC+/PTOvJhpj73vYWu9us/vvcXJ2D14PhU+n5Z8Pv6LYr2Sp1W9mQkr
                          vc2RAb161W894i27PQTfoz4/sRE+u8SQPnUek70GMuI9HnimPfb3Rb2hrK69XsNNvQAMTD5UrCk+
                          AzsDPWD/HbzsLyO9hlGovVGfrb3szwK+nFcvOjsrkL1FCpK9gcFFPNy6sbynU2692fSHvRAJ0b1K
                          xFk97qWIPQ3Awry3DpC8w6gcPTe4A7zbace81muivboS+LxguAQ9EzKCuorUmrrUdLU8/4IGPUwR
                          NDzxlBA7uKV+PWSsHD5hG768Of6wvTwuKbvSniE9jV5gPO5HibsYrtA9Y2QwN0iGcb23TCQ92law
                          vZc0obldGwo9EC4GPXIaYj2cKRk+GMwxvH06p70Aooi9iWHivfFuVjzl14a9/DvKPUZyTT5z3Wu7
                          Md/CPFIipjxSrFC+V3NPPcxU0L0np7o7G2YYPpngvL1QYru93JujPM6jLL3Bwfi9cDouvqjaSb5h
                          jbW90PlqvcLA2rvlqsc8XR2BveJCybybaB29oE81vsJvmj2DMZC98kKGPbsh6TywKpi92iwhvaMD
                          CD74Vps9nw2SPFYfIrzp8xm7PAcsPVnShr1jLJE9glgEPsKK4jy14kC+vRgRPtAT9LwnIdq88EOT
                          O2VxkTyobu88iGMKPQZOgr7HbpQ9MT+dPVRBKb4Es8w9bjOgPK7lM7zwqoe8TxOpvSSBZb1PttE9
                          Ew0NvHc9Rj7saRu+AbYJPuQ8jD5PYyk9EMkuPoLlpL0RAS294ztaPfZ+Dr5gXo49VNMHPkVmtD1u
                          daM9olJ9PTzoOL1NFCk9g6evvU34JbxYT7m9UgSHvSaxiTtp2OS91IHjvXm5qr2YHuo8UMANvkQu
                          Oz7O52s9up8hvbKvAL5uksu9f49WvOD/mb1q/D486etvvXBi4LwTjQy9LQu6vGBzTD0VP7U7lIMN
                          O77tB70LmwW9vEffPC9dTr1oL6O7HKArvFMHiLsRSVi8yf6APbZFAT7DNgY7WP67vXhboj3BYi++
                          QQdaPYwlEzyvl8q9qdDXPJQthT18RnA8fjKpPJxuOL4PG5e9PyxjPeH7Mb3NMo09NjcePilIpr2e
                          qaE9xBClvt1NdT2OaW09WhBmvReFNbvUmbs9v/kNvnFx07zDyZc919p5vl6/ejzBM7q9CB2HvQO/
                          TzvD6WG8ZMETvtJ7rr1hmL+9u46guwVT772rTQ27JXYnvNNAx71LBvw9I0cAPvRmub1H3IK9Y4Iv
                          vpQfbr4yk86+ddXlvS8DF7t8Pvg6vViAvRfbLD5ujDm+IOgiPU48LD6yKxe+V+novllpmr1VFRW+
                          7FxEvfcRjzyl2B08u3BaPaiQBDzJyhA9m+3evgx1Lb6l3by9B0y2PdIagz2OTsM9yyQ9vcxx0DyN
                          5H6+UuUEvoURs7y0+Ya97U70PTOhkT1jspG7liAdPXRJk75G3IK+cuhMvnJ8Qr12f0K+deTcuiUu
                          Nr5RyyO9vlsAPlI7i77sZFc7lRfBvr45uD0YGPQ9m8/0PFBmBL6XFHM907Idv4F5y7x2826+mUtC
                          vpFB3r3uSzK+A6A9PRT8DDyetb6+gOdgvmqYhT7zLHG9jCA7vjkWP76eR+S93IkRPT0NRj4RMo68
                          vlaMvaAhij31oVQ+HGXZPR0UEL6WLHm+dF41PdMekz0q18E9pzAxPYBcPj2EO4o9ZfzhPbzTPL2t
                          OIi+3Zqxvc5EGTwYO4y7r+O1PAJzyD1UtsO96SnxvYnFUb5umQk8TWVKPrR06D3Bs/O9h3nNPNi+
                          1j28BCA+F7ojPS5vub2Prog+6KdLPlEMBr5v2Nc8bJPWvruYwb1jOJK9Fzu6PYkBID2P+JK+8NlD
                          vyDk7r6tPwi+ybhSPeRbqj3crAa+pq7dve0Bd7y22dO91P0cvnDbuT1roqK9jxQUvkqVCL65RuQ6
                          bptXvuOF5b1qdLu9A/HrvYDCbb1PKlg8Ve5aO/gfZz46SoM9RiuTvTexbr6AaMk92T4evvh4Aj0o
                          +A8+pm6EPQDT+j0nZ9a9e60OPTula7zyOxW+67zPPY8W8D1dcuA9NGf8PUGj3z1gw768gVyEuTbI
                          XT1JAh++7PELvusCbzy0Hze9xYHZvEC/Fj2Snfc9BDv6PSp2NT4chd+9PmknPX5RJzyy6I28FMjq
                          ufbTNb6MU5C8xBFbPnjEgL3pU+W9EO1tvZCu8Ly5fgO8d6rlvf8Cjj54wwe+xSVhvWFRx73iCiY+
                          hvD7PVwIjr0lyuS8/8o/vsxhtj2kCC69w5d2veh4ob3NUQm9qf0jvkfWkr1jH7+9sFbqvDDqCb1j
                          mtw8AFIjPW4YZT3//lW9nuqMPbVQwDuWTee81/9qvUzJOr1ymYE9SyTZvTUtOLy+N008KO/CvZBJ
                          2bxxo6s8YXrdPF2jhj2L5Yo9ccNAvfHvpr2EWwA9ktOQvMwhTLtD0YM8PtLJvU7y672mFLA93j+5
                          PTYwCT7OYJY957KaPVBfMjz2vsI8Zqu5vQ7Mab2JY5i9EJqrPRedNb63vqK9w/7DvfJq9LzGjyQ9
                          C40WvNscpb2R5q09lbjLvX7liTrnhrU9e/RPPsSMXz1l+dS9e4McveX1rrxM25s9706uva9QwLyl
                          9qy+ey+6vj+kyL7SosS+7IQWv5lAEb8Uvnq+bVGLvEJO3r54SJw9pWLCvrihyD33I5u9q0xaPT2D
                          6z3mhrs9+xk7PnAsKL5ETlK8LeM7vdm5Pb2opU09gkiLPY6FDz6gtOU8EVdhPY4OpT1cIa+9Siwi
                          Pnv4gz2XakQ9dSGIvvRm6r5EIxK+nUV0vXgh1zwnoI0+EQKgPI89hz4fBYg+6lrRvBn0mb0smby+
                          COJovtvjHD3G+4q+VFifPh45ID4N1um9SipJvvv/P75iD/i+ov2Ovt3sLL6z90u+0eKsvUvOWT1v
                          zfi9LE2avdXjy70M0p69YRFLvi0bmr6opzO+VjfBvixSsj2T0zW+m7xJvoOIyb5NxVa+pkJ3vprA
                          jD53rQi+8xJxveh3/jwEwpy+XHpovQW23Txwqzo77FznPdl2Zr5s0I2++s+evc7ygT1BR4i+bRPh
                          vf0gprv2hRE+eyHMvdXkur4VSRk+yhl/vR1+GDw3kNM9c/UjPV4hW76K3pQ9OXaHvV7VSz3zrYc9
                          alszPUW7RryHatC9EQFmvnORD75XDAa9cLmyvR5SEr5L+Q498MkOPgCAwTxpJda+Hlp4vSFQ0rxc
                          KJM9jLeZveVm473Xuoe9/vzGvYeFg763l8A+/BqkPcApBbtLhwa++WB8vEupEb0Kg528UyNKvQ+t
                          ZD2Kx1e9SHotvaI2Cb4GJC2+s3vAvSc34Lz7hj47yWmGvIU0Xr2RuYK9i85Ivd7BHTw8JJa+viWF
                          vj/GJb6iiSW+aItivk18gjxGJIK9D+dUvZC0xjy8rOE+u22EvuUW7r6Wf5a+U/+2OvW5hz1atwE9
                          daRHPsxxAj2lXqS9uj5Cvl/uE77Bmwe+Aoo8PBnNLL35sj89/8JVvqL/B74LVIS+y2kgPTW7G74k
                          5ie8h2bTOCtAvr1bvjC+sJqpvrHOlL1oB6e+0iKUvkQYG74dVQo+ri+UvXcikL0K7wA+AEWNvZ1x
                          p708x9K9D8j9PfSKnr5TP0U+/EumvnrvQTsW4Ay+qoh6vacjo7vvVda9gZS4vT3HwL2jKma9qEgU
                          Pbkh2TzG1v88koJYutUwkzwUKB2+pfhSuYyjvj2W8Xk9F2LEPTD6zz1fygK9YNDcvDZRIL4UYB09
                          p6LUPe5aAj4YdXA9FE1SPJuD9jt+MIo9ZQ2wuwvEiz2mIui81MLMvF+9hL0yb5e746ECPcy0qTuj
                          Hyg93rkLPkrG7rwkVtU96EQwvRD0Q70ZYMi77ZkevgLQz7uKBfI8lvMEvdmfC7lgNPm9gxB+vXki
                          izi4Q6a968vtPdL2Nr2sBQ6+Cg8oPbwUeT6vrsU9mTqpPfZwB74ZGWI8u/ERPm/GVb73MYo9XdQx
                          ve8q5rvOKFa8oxykvdMs4bxuxIo94R28PDNoa72RjYk95RmrPctLUrwwCJW92eWuvd/ypb1odp09
                          isc0PRau9rwxsCA91maevK3Ku724xNM8q2O2vc3E7zy/QFa9AEL/PMXZwj2WmhA9Fb5aPZGel70S
                          3Cm92/JYvTJODL0tTW06cKXEvJR9ybmczzu9yNmGPCCIFD7xDWg+DgdCvdvDzzwvdnQ8aqMNvQTq
                          kDxdXSy+W5UFPnnUhL0WSWe8Z7KrvCtFh73bPA09cmcqu+H+qTzY6iw8TeXxvHNoAL3njKU9kR/x
                          PekbEz5rgrm99DgTvrurmzxjdQ896XD2Pbr1Lb6V7Q4+ZFr7vYw+or79VIu91ZDhO2wwGD7f1iO+
                          fY34PRCJqj1ss4e+soFPvnUIHT7WIDw90s4xvA342DwMR+y9cqy6vdWDzr03Zsa+yliSvncMyT6C
                          MMg9NGTkvEeypLx6m9i9/elovYc04T3X15o9192iPrglLD5U2sI9MziMvT/EY76dcgY9xLsqPUPW
                          az74N1w+IP8ePHcWqL2Axh68/D6KvnV7s726PsW8PeuIPXNtMj4nGAG+0aewPYqX173efoS+3lOB
                          ve5ZDDwsa8W79508vW7vHL6fSHK9BNRLvuIOsr4Yka+95ZmavXSOEz3miPA96ayqPXRsFT2U5+m8
                          /FfsvC/Srz08XQi+TaZFvvw6x72sHFO8OhbAu2SzGr1Y9s48JLyzPBeX8D0JHxy91PNHvaMYfTwr
                          nGM9UPASPWbDcz0jhK47uiabPIFFg72A0rq8O8uRvfgHEj30vLE9DdLZPa23Sz01Sgg93fZ4vb4s
                          mb1sfza9FzZxPKNfUr3HeMy91flzvTg1erz9v8k8LIW2PevuBj7T7Lg9P0hmvf6tmL1ON609Hgez
                          PXp2qD3QO/Q8ajCivfxASDy3FQk8wiocvYoMSrxP6Bu97gapvdYGjb3NU5O9E8tcPWU0jjyRKqA9
                          JQs2PeOmibvgKIQ8GUWZvN3T1ryYlVs9xioau5q58D04syM+OdPxu/RIa73pjqC81iTIPHReizyq
                          Cdw8Wa13PboCPrxXBOC6Nc4WvqpKYr14sws8kCmyPccmk72tkvs82iXqvZL/VT0lTUa9qGChvXMg
                          1r0EmZw8n+qUPcffwb02JQg9bKpyPhbbjjwtK+w8enE1uzVMAz5S89o95zdKuz5dhr2eZYI9iXvh
                          vAUmzz1KM349bKVVPPbWwz0H9RO+Jz8TvhzUAb5CQ/87t5vfPELaoL20Zey7/R0iPuo0kL0EEJc9
                          G4OKPH/YLr4Jh3K9s70WvWIzNz1gGso94QQMPipyGz0Prao7PXmGPQ3aSL2KX0U9O1gVvVLGwL4e
                          +/a8xjT+veAwRb4rzr28KE5aPTRQhr0csO09Nw4kPaTuvT3awEe+KUY+vrvzIr1zahI6M9jEPQRd
                          zjv9VW29cpnCPQSjE75GkfM9UZJpvqE5hb2C0yu+bva9O0be2D3NFnk969Tlu1WiCL6g/yS+Nh4X
                          vUfiBT0x66w9xoWaPSio27zBgSM9dSQwPjbbWj06B4c+PVGBPaDo77uJjbE94aICvg73eT0OWok9
                          ie3bPYX6wj39b/i9t7PqPWL7LD2OLYA8CLUcvrDder2bNVi9+JkbvHgEGL7inBC+daKMvf35cD3O
                          Xcc85c8gvjKaK7yY6LA9AhizPTwiNL1h4J07r6/uvGrsYL1NRaY8COChvbOWbbyS9lk7I424vLKU
                          oL2003g8LE+/vKeLPT1P6KK9vdABvW7gtT24uWU8YgzMPMjnLL7IbEo9McSBOXcgxr0GYz86QPkA
                          PslLiLyBy+u7t09OvS34Pjv8KhS+fxGvPcQ/Ej7CzIk9cTvaO/cd2rucPxq+PrDTO2AOLD1Ttzk+
                          vvPZPaXHyb2/zlW9Hn/hvZtxmTyYRCK+gTDFvdFPYT334QU+wrYCvsXAfr1NIo48nn67vaVOB73g
                          MZ+9l6fgvB55IL68xRy+/l2hvVpAcLyqRmA9rWODPcvXY71hifu9/k7jPFaLzr3QhAy+HJiqPNSy
                          H72JNKe9WBbdvZckwjwSsDE9m/6OPerxWb1C3xo8rOPuve7xiDxhcM690JZavkEBLz42P8O8FwO3
                          PO+FJzzTjB291kN8vTnE5L0AodA9qUiCPkFkvj2wSkE6QY6UO4nG072A2LI9coU1vD9HST46CCE+
                          yejmPccyYL33hNm9ICbKvYUabjwY5jG91E6pPmaKXz7NF28+1RmlvUVhP70iApC9PV44vBdpSj1y
                          hTE+zPcpPvgZhLy9rCA9kzlmvPVEXL3x8pS+ac2svV6fqbxsY2+9A9mjvYoIAj6nvz4+dWuFvdg/
                          8zxX/j2+TvqLvKkFyTx/CpW9iwavPPvWjDZDJ1y6bvX2OxHgFL2sdJu8wEsGvZXsvLy3Ur+8v9XK
                          vDDVFD1x1M68z8GUvWnLhj3EeVO8N0pkveI8uDxILRA973O2PCSjCT5irUS8LF9vvvi5lTzX2D4+
                          cjcgPWQuyr0Ts5O+mm1GPuS0Ab55hBQ+qRuwPH54BD6y/2u9+Ioovn6dNb3vJw09M4vuvfIekT0y
                          tG28B+5OvkAGWj16zSi+m9aPu7f7or3mfWU9WiYDPur4jr0yFgQ+SWmQut3Eu721s+e9XQJRvseH
                          0Tzv7y68AClwvWG4tL1slZi9UqnBvSiopb1/hFK9i/yzvXYy2D3fMXS+LfAfvVj0t702zjK+wXCA
                          PW7j0DxjIge93oSxvXCOQL5ITao9pISYvftQkr7ynSi+w3ExOzH/mj0bADW+y9JWvo8YDb6dUTM9
                          hkpyvlwEgr44etI8Z1EZPaPJTL2XZbs9RZDDPklEtD2YewO/p4FnvhfH2jxmN9C9Jx+ePUuFxD37
                          +bE87566vflLlr6Yd8e9mkQEPQaPpjzesgA+uCCTPUi+s748ue09ktnHvlqmKj0Wfi+++MkVvk0Q
                          Mz3xX0W+c1mdvjI9F74N91a9CCA8vTWeyb0iZIS+1WMrPq6Ouz3aUqO+1OJuvdQFKD4NsIQ90Qgm
                          vo96sj2yS9i+0SFDv4r9mb6pap09qmxGvfM91j1UAsW8+bNfvgGL/r0N2g++jeeTu6lHRL1nwZ89
                          d91cvbBFjb0pq7s9ILE5vTBXRzulvcw8UYGDPb0r67znfTa+uNbiPN0a2jz8pue8Q6IZPbG5yz0q
                          h9C9u9xsvmGCpb10Udm9H58mPAkdnT3SCA47ApaMvR3st7zC9SK+lfSovq1dh74dOjI+1dhzPTek
                          wL3VkW49Y7JRPf+7iz18DmC+VOmlvkm2Br51mQi+ZqQYvu+xcj6JUJC9SSdgvRNAXr6S69K+p4AV
                          v9GOOL/I0ri+kscmvSpHSLxIDbu9kjQpPs5A7bx6zsw8KDvrvNo54b1Js5k9y29PviA2m76NBYG8
                          YuugPUC59j1Ry2W+/sIBvp+W+76kjjG9q5QxPm+VLT65OOY96pqJPV3NLTyXoOK8y/Egvcl62zyt
                          7t09d4aDPJ9BDr6uAhO8ejInvSvkaz7Nzz87NOYnvURh3T3aeTQ+JhJrvd2NtL3604i++eE+Pf+7
                          cj1gW589dYnVPdiMN77pEAq+3RosvrYUnT1CHPs9N/eMPW3CCj6pN7Q9UVMxviz/Br6BB2O953zu
                          vc0e4T1KIrS8XMFHO69yD71tbHo9e0SbvUiEcL2Ia/k8smA8PvX+fb2iT4i9P4kFPp9t0DwcpcA6
                          gQx2PdpbtD1Rhbs9Qp9AvUR0kb2p2R6+fu2gvMfL5j0WF7U9YWCfPSb72b0KKbK+hTmOvblrET60
                          g7Q9gWu4PHIjWj0eh549joCZvTnIVT6gAA4+526ePeyWST3M5Ny9dkMZvRtHEz00eDW8sE+fvcBK
                          lL3nIbw9ASjgPe/JBLvIaik7SFO5PJT+BbwcphK943nRPWUTMz1mQg6+kOXYvI5ruLyogKc6xv8V
                          vm/RT7ufhDw+CyUEPSd8Vb0TPgS9/x5KPGlWEb5Glse9M4ipvCCWI71mdKI8Ubg1vEN+DzpSGny8
                          iYqIPSKAbr0A1fa6tku0veLJij3Fxyg+NrsoPn51773tO7S9NkGQvJZbJL42RvK9gVtuvkK11D0h
                          YI0+oqkxPuFLSj7iYAW/LzBrvjbChL6ZFlo++X8pPkw/DL534Rg7da9NPUziQ7wbbKy+icnWvChh
                          m7vwPK88yJmjPVzbcTzZcZy6d7dfvHM8qr3XwIa95zcKvcnJAb7bvcs9PL2VPa3rij16ucG8DvMa
                          vv+1KL50aOK9luR5vl/ecT7qya873j8avCVn6b4bV5+++tQaPv58bL5vqgM+eKg0vTdr/73VkUy+
                          macbv2NtIL7/TRW/K/zIPRn4gDwEca+9rhJlvikxib50D4m+vlnzPC7jLD6aP0k+gL2Uvk4XZT4V
                          KY49gUssvmKguj4Eb62+G840PXQAG74I6zW9+egmPYGzSz5Rkyw+KnOLvrlhTr6u1MI98xnDvoqn
                          7z0yBqM+J+xTPkWqdz02xho+lD0LvFB8fb5HBIy9FvgMPrPHgT1i8Hk8O+jfvfSHyb2oqna9Wbc+
                          vc6s071ATKM8sS7DPSnObLx3jfG6zhihvSYEH75hIbe9oSu1PcsA47ztVJ28Xe25vMRCAj4/9OO9
                          2MgTvmyZVb17P489pUgbvG9khTx2bBM9FkeWvWxyBL5z+zS+AJxbvcenAj1bLEE9ViXqu9RnSb1V
                          AMe8CAmMvQP+B746P5C96mvePY4ebb1v3TW7IzviPVWuvjyLTcG8POydPUMx2bxmK5O9OcYZvmkl
                          1z16rHk+l6YPvgJIVb4FjNA6PgAJvs3alL4HjQc9lAg6Pn51cbwyEa27RZWPvrpmsr1YL3S9U3CJ
                          u/VWrD18U4g8r4NKvTYUPjyKII48KAVSvnjdGz06CM880ylOPf/ncr3uyT29thO/PAxMnTuIn7u9
                          GYzFvKoihT1EFYY7zTbaPTMgZbzbUVa9DagHPYYlAr0xpqS9gcApPXYExr1Pfxs+3pEGvYoGab1T
                          nCI9wuNjPSQ0Lb01mF09IJqGPWJzhj08KUe9i7UUPSfXfb0SnYg98XoXvvmOSD4j9vY9q/rKvRWd
                          t71JpPu9f5eqN198Mr4s8ne+6EhivRWxQT4062E+LJTTPf5SDD49hom+L/gIvorK2D2yKQo++0TD
                          PZ2o2D2z29E9WHmePT4AWLtR1qC9onxYvUuHOD0KFNk9hN/evYdSbb2Lf4+9pfKFvVqiwrwQyac8
                          xQgWPhJ5dj1t7fC9BVzHvaq2k70V7GC9WsMUvXqsoj3yXDM+YFsRvuI5ZzwkLJC8dkwjPvTIOL4P
                          nSO80vAfPS1ehT1RqOi8xMG9vdWrMT2iYpe9Lo/WvVjtlr3rNuA8SijXvcUtgzwmj348UyrtPSqH
                          cb3ZLOK9VIbSvfNmyD3Bzxw9Lm4mu2lCqz3kPD49H44nPbLRhD3UPoU9idevvZWT7b1z70A9HcLD
                          PCJogz3U53O9HUXoPZzGoL0X7PM9eJ6SPVSCoj0a77e9xEXivIsvsD0ZsW49PIAZPpOPsDzT4a09
                          Wk+lO6yFSz0guMu9LkBku+mu0jwis7w9PmQuve8l6joB2JG9U7JJvpFnGD1qNTC8+4j5Pec/Grwr
                          e+E8jMOWPfdnaj22DBa+qn6qvOYqGb7sJ/g9xmiDu6O4Kz03thK+ZzmovUTlFL4Sc729OjCgPX9t
                          mLzmCoY9NFLrPFSfID0JM5Q7XxmwvQ3BdD29f2G9/ujivJfwkD1k/xO+ukQUPr8/Or0KO6o9/gBl
                          PUuWzru4MYw9Dnn/vIyWhT3DZhc9F3yEPQmdQb4sR+y9/KSCPL5mFD71Mr891cwQvaXzr72BEYm9
                          co8bvtwpVb4qbVC+3+UTvjFi4Dt4KG69fWCbvgge7L1Eibu91EqIvrie2L69XP29HO7BPYpbSb/u
                          uTS/D3N1vXL8wL3U6ek9+k/FPdoc6zwSt689oCu2vmCGCr+2k2O+yeMvPUo8pjzeqia9BJm6PR2a
                          UD3uOCQ+SQ+evHz2jrx/Q/+9hSeCvZtqtL0WUAE9TiicuxoViD2OAwc+CcGvPO3t5L3qfBO9sriE
                          vpPfLz2M+YE8g7oEPtZ81bt48YQ9u2s6PV82ij2mhMq8Rmd1PTyOLb2sLqE84tgJvLl8SD2RAqc9
                          tobNvKQ9+TxH6pk8SQpovtiYrz2Ek5M9i5AfvZrRjTyZcT08eO/KPLmtzLzbJkU95IMyvrcLortu
                          Ohw+kESKve0JCzxsjFI9SSEePn9BF72+Xka9RYEEPpIoP7pXJnC9MpoJvlzn+7yEby29WKeUvHNL
                          +r0cugU9dRU+PbV8Jb1Tukq98kejOwADT722H/M9/KeLvSUxtD17F3a+yBKGPCPCwTxUMMe8L7ze
                          vezOvT1yOhY+vlsZvXw9Mz2miOq7AnUcPsmtgb34dtG8FO+JPUmSir33/Wm9OknGPQ8TWD2TBUA9
                          LELPPG6p2j2HTXc9ZbWwvSko8TozUQE+SpmoPHtKTz1koww+E0lEPrH77r11AwI9+lVivpepYjw9
                          9wY+PapKPRwxGz4eIE0911guPmkFD75R8dM7GRe1vEso+zyHdSW9oo6GvbEQO7wz/2a8aE7fvfAF
                          q735NgO9jHcVvUbWrLvQj6q6oPskuxX7Fr6urda+ELYtPY65Ij3Ppc49MiVLOxQN3T0G+F29QxJX
                          PKnhVb72MoG9HWePPU53Gz06or88l3AcvfPpEb4MoBC9tJlJvWj2VTwaRcs9O3dAPQAfEzyMPQ69
                          bY/JO92gUTzyNNS74aGLvcP7HD1III29QABBPc8FjL2Zz189qUlHvVeORTxJMsK9CMsZvjJlk76u
                          AJq9NMUVPiJ9rL0LlLm+L5UPPWncOr4pRL+9NI+MPO+YKT1YZHs9ftm2O0mIC75n1Ec9kvkFPpQo
                          Ij46pjK9656gvXr9rb3fyhk+ZnEbvW+ZNT6mfqw7bY/NvFHvYbzL2Y07ZVcuOzEmB7xC1YA8LE2n
                          vcODIj7X7E++0fPnOkB9a724JPS8kfhfPfSGFD0mRW8+q1LiPEwCSb4JXBO9WNoZvcyHkT061Ai9
                          VlOzPQYwKryk5Jw98jKMu/QoUb32W9G9cuoXvVejhj21EJQ9WNHZu1SZND2ok847h/zxPFZdtj1O
                          D96876sNPg9R0byV6Vu93iBnvZcsmLwAnaM9I8aEPUwJFrzGE6W8b2v8vPTrcL2Zoag88xXOPUo4
                          lr01pKQ9Lx6MveS/iT2PKyK6+lvqvBamF75ZpKY78gEVvcF67DsgFSu+oS3Cvd4Y9by+OpC9m5JQ
                          vX3Fzj2ksQw+/8UJPYP0EL3HF+o8TxiVvaEiwT2wHqw9C/wPviqIszx0AKI9lsXIvemsnL3oSyG9
                          V6hCPWMv3D3Awlq9/6MqvQ569DsSegw9axnxvWiCfrzEhg++RRYCPjBkyj1B9Dm9Moe0vDOFbjxA
                          s8q9oEwVvrvIT773nl894+q3O2v67D2VNcg7H6oAvTkuwDyQO729OYK0vcCjcz1+QDo+0J6SPdXr
                          Yb6Rybk9WvWRuw/BN72qZn89nFJDPkxoSb1Jb2s8vRVjvdqUU75CWxI+KgowPWDU4D3PI0A+f4V8
                          Poba+72I0gq+rloLvqFd5r01qqQ9a3WUPVrbKj4wbQW+GY9LvBZnBz7kcSo+PmkdvvQGWT7WpoA9
                          kg33vQOIz71bDEa+CHUTPjkVsT38d+K8y7+PPWSWBT6cBa++slV2vidF+L3K42u9pcyZvdRbCj3u
                          zya9jrutPNPi5b2XOZq9IZWCvFtAtD0oaEq+VztrvYy43T3I3uA9/4bBPSr/Fz5Dcf489bmEvei7
                          c7ycCCU99xRrOwvzxjhOaxm9xquJvPemBDx5sKa89eOIvSdsQr1r0kS9bwVevZkdiL1nqYI99n7G
                          PXMh+bw57VG8k64CvTZnRr3DMcK97nrPvdomjTzjKs886bYUvRi1Uj13jTy8SkJuvdH9Fr17h9u9
                          FPnVPXV5bz2OX4C91wW3PU0GyLvFpo+8FIl5u/StVb2G7QC9oSwVPnqslbw+6tm93O/ivAD2mL2b
                          3os7yv0BPjUzWryOQ2U9ALD3vKStzb3sFae9pb2ZveqlKbz6JwE+cLWVOuX7Ez6Q/au9KlXwut6e
                          Vr42eIW8/CX5u27YZD1WRHu9X7wkPV/FxrzX7+q9VNjCvcKoSb3zGC2+v/PxvZKwMj6TDj8+V6uC
                          PkurKr6YxQu+S9bjvGTmmb2HhA6+IeAjPVZ5AL6MbtI9GtKLvh3dCT02Kiq+0lhgPO7ck71mbdA8
                          o8yyvY5pvDxPcjK9c9Vhvtz6x76AjT88MgIVvd29dz1mOUg9mvpQPKilZTxwyF88J8E1vjcmPz4r
                          /M68lWLVvUgFqD2lSVS9BNGNvQ0QSj0T2p29leGxvbXQET4s+hi9FHNMPVQLKLpizBq9keZqO30g
                          Ij1aTCS81NpuPdlSIT0aq3A9QkCLvE1n1bwDPz+7OB/wvR9DqL0TgW8+L1uWvYJ+2jxE2qq7EYa5
                          vftktTxnPDK/o1gQvObVjDyomsA9pAkVPu7Jgj6KHzw+KG52vsQ+Qb4gWli+LoQZPYzeKD0ikIS9
                          XmUuvSrLML0YqTo9KD0jPpcsjTzIsaO7godkPRqkpb2KuD27aKW6PB8RB7xYf648iBMpPHQ9DL0C
                          tuk8l+xTPaEb1z2rJuw9VQSFPZH0mzxnUIy+KgGkvBW4uT1iCfM9PnjWPGdALb4EBRG+CfIXvpdw
                          Xj3eZbO9VJEgPa0Upj11hxk7YsEBvlGDvb5un42+zYzfvjBSfLyT8FG7Xk54O8Vf8r378Yq9G07R
                          vdPjdb6d+ZO+wwV/PWu7aj6taRI+BytZvuzJu7zdtLc63hxlvjlXpL1xLKA9GIL4vHpFLrxuh6e+
                          pn6lvd2IjTzda2S9Qy8MPqzvDj3/O8A8Sp9nPRj09zwERg++RkSdvhmXpb4veQ2+yREcvq/1tTys
                          qw29M4TwPVOV1z1a8me+wtgWvpydYr0Vg/k8DT6UPbGERz1IsIY9Z39ovpw6z72DVJW6pwskPH3l
                          aT3HKZg8IHCmvGS2L76LMC8+dOudPT3DNr0J6is7K1EPPhbw8L3ROJ47KFIcvax5szsG1Rc++2XI
                          vTShMT5jPJQ9xbo1vmMxAj0e2Hy+7IlLOymVab6YhB4+6vJqu7/GXD1y4Ie+0IwCPbGnEr4Ghcs9
                          tZ1tPtvGHj1xoCQ8s/SWvSGrYLrtDwk+e6BRPXT5Q736u8S9RuAFvl0wXjt5Css9+lOiPflk9z1J
                          Tpw9q7gXPGwTG71Zs/e9QWH7PWZeI752mzE9Dhd5PdGqzjxCSOI8W9mnuwAXmz3RyaS8nEmRu2pj
                          AT7WQ8m7oL6BvRRXrru4KW67OlUyvRfb4j0JjtO8v8wRPcdIM70hIJi94D/yvHxA4bzuigS+DqIx
                          PTT8ITxT/ge9rKBDPFt6t70vsVC+DRRHvUNPOL7pkuU933oYPg4+Tbt3f/88/lJnvMn6RjyTUTa9
                          fGU3vtsGEj2Jr0I+pJ+dPfF/Xj2gHJS9Zr41PCYNPL6YBDm9Vrdzvf+qqL1Unn8+EOyLPpwWVz4l
                          oa++QIrqvmydD7/oO7A+JsVEPrt3t7xsgDA9T+JOPHtVwz00lRA9REx0vmrrsb3eBH28ygjHPcDh
                          UD1liHa7Cm3luyS5pjzAqIW+U9CYPHlPy7wlyh89Djt+PV4ckTzcWoo9s9dWvX2WNTzONFy72NB+
                          vW/SY7yPdMG9H7q6vvRIN76Tv5K+sYnGvnBbnr2NBq493oXvPVJyWL5gA7K+Hi3Hvii5Gb8xdee+
                          sGpOPkzW5j0ErIK9wUEjvZft676aiAK/5/RPvok/Br/6Gca94XNtvvmN6rsFNgY+CNDOvhUO3r5i
                          NLy+2W4ZvaVj9z1JmUy+bx1GPZY2JD5GM4q8o4GsvpP8h75+yAW/KWDGO6/8wj4U9Cc+V8sbPjgo
                          1D5XnCE+0iL7vZ7scb5L34M+w/gwPRyW07r97og9cZELPR25ODy2Q/W9PsoTvxIKjD6Ihbm9yXrC
                          Owkj5z3yk3g8qFbTvbG/Zb3Woqe8Z5igPkXhOz63fYC9mFcqPQwKGb2GN7+8akKxPMtf+b1HwAM+
                          IhPjPDCDHr3WoT25R9z6PWqU3bwPeii9444+vKVriD1WJq29/C2wPaCH3jwKuPa60v/0vPZPPrtS
                          QHC85krGvSnOmT3Ddgo+5TO5u4cGAb1yU269J4PkvJmGMr0Q0cO9887DvYDFfz60lqc9XgpwO5aS
                          E76MGda9MVlCvRpIVj7tDGQ+mByvPdFVkj4tQqA+HDB9vdGnOr7L2QK+1Eb0PQ+Qpz2hUKc8JH3a
                          PHPrwb18Eoe7sAR+vF6QR758ZAW8AGayvfe08rsZmcI9wGwOveFk3TwRf5u9QyKZvsIxez75KXk7
                          YFftvVJm9j2XEcc7dZOCvTIU6b0aBkq+GNaxPL/qgj2yWcK8/bmFPR/43LwU6/y8E42SvPi2Pr1Z
                          cbS94WpjPUccZL0xsLO7eiY4PUkmizwho/i5rFcFvpe9rD52Ljc+rQbFvdbugz0bhdG8GaprPQMF
                          B74ecW6+CAt/PWR6N72f0Rs+wHWdPhF8hz2KlJy+uggqvk53wL4+n0o9qLmlPeIkED407Dw9e2Tp
                          PevuK7zgcXu+oXXMvqB2mL0pkTi9XlsgPbkf6rwudtc8ZfkzPXCWu70HaLy91A1PvdqKyD2fsbQ9
                          K3rKvR6phryieQ++MS4BvnDsBj7EeuA7Y7F4PilWAj1loAy7J3GZvN2ilb2/KK+9VuTZvP9eobyG
                          UBU+cgn+vaPJsb26/eQ9oH7dvMMCWL1k0647JBF+PV3tqT1H3xY91aBIvW+ulDu0Yi87bQORvbmI
                          sD2FcwG+Ni0JPZ67Qj0YyAy90Sg/vcUgZjzTC4Q9MjOGPRcqSbyUqYo6MrL4PPgdtj27fvI9yjrp
                          O6IOyzwqhro9s6JqvdRIpj2mkUM9OXo7Pq/A/r2LqKO9xa7+vJYIQLyIrx2+grWdvbQUVTsIm4U9
                          d5CdvcykbL1ExRi7GUtrvZA6uL2Z8Mi9KU6svc36nb3wvYK8TQtmPN7ms73ZrhW+lu8svXXxvzwQ
                          hyC+HTrdPNbpIz2Q3xq+UxXlu4+jbb1op9U9VzgIvsnRC73jaV2+KEbPvZEyWT3vZMw8xiJNPbX5
                          tT3jOz89qXIRvjc0h7uaqgQ9rcnlPQga2T1hxYQ9Bs/JvZVjMr6ELVY9QwpWPZSXjD1QKr892zqc
                          PpP71j0E9kY9LsbIPP2lRb572nW+Nk5evAaLZ7sb25M9pw8FvVUPYD6jPwU9YxyOvPAzHT6/sni+
                          M8TWvUAMPr6zWo89GMEQvdwmKb6IWEe+0A0wvuwU9b7OOt29bSwAvsioN752WDS/VlFsvorVKr75
                          unO9uEGPO/U4KL3bVGa9kcaAPVIea77OmRS/bA0fvps0gL51WVA8klvPPbwyLT4Aww09Y7wAPkRD
                          BjrUSEg6FPMevoHxl7yqTBq+LmskvXXUjL0NfAs+gaO/PXNrGj4EyzO93Xilve8zS76v/Ci9h2hg
                          PCIMfz0fdKy7vD4mPqQ0FT0/8Sm8vRz4vQ6ENT7anYE94uMBPWMoCj4oUDo9xWUOvLtTdz4Noeu9
                          Une9vZpYmz1hhyc8xC4YPdtpjj2N97w9y1MBvn4/DD3ADSi82jwPviD0iDsHWNS7YmYuPJpBbr2U
                          dPI8znrhO2EmRL2bGLO8jUi/PT3+NTw99hg94kcWvXNGSD0Z/hY9F+JPO439nL0Lq4G9EhJaPQpA
                          0b2Bqh09WPM6PbzgwjsLXgu+EWfbPGI4+j3U3Au9ukJKvnIpZj29bnu9O6kDvG1aQD0mGw69lmrI
                          PRgyJb6/mrw9NTgMPYh3Pbw5P5K82FxdvDYLHL76lAs+WfMzvpZohr0NF/i7SY6QvIwpmT2dMGY9
                          /UbGPI1oBT3q/CY9gsTFvJbKMr3ot5M+IA6bvTbiQb506+A70JGlvrvQ/zvTihM9TqeAPpcp871A
                          xmI9Ex4tvez7fL61m5i+2FC4PU+PVT3db0c8I6UsPYxvv7w7+i86ViA2viR2Mr1pEdU9RXNSPXnU
                          Ab08i0m9yPSfvPwlBz20gg2+Qbitvkol+T1Dvdi8Zy2EPMIHY7031Sy9yOwbvVJEBr1QWv29w3L+
                          vY03Fj2QcwI8jOF7PEBLKb1sXAA9Gfz8PH3Qg70WvbW9K24DPn2eFj1cv3s9SJqpvYHPmb0GHBg9
                          kBNbvU13br149Y89qfBLPWXUXD2UvEe8OYTDvHrcXjh0IFq+gE0xPSVALr0rUDy9tpd+vDr/SL6R
                          5Fo9rxZjPLe1brmTUJM+ozNIvumAg71e8Oa9kR/JPZSf9Lys1Be+TsWFvvT5Jb7rdUM9gKbdPdKG
                          yD0mCga+fie7PQ/Kor7mY4G+MgCAvtAt3j3/Rtc9Xq+9PDUbsroWaVm9DKUmvk7mUL78tDg9KlWA
                          vuHKoTyJeIs9bDGrPHVBiz0Je8s9ks3MvadYRr6gjkq+AdfovCoXAj0UA748S6LavPDRL73z3uY9
                          ameQPbQqaj1dVQi9gLiEvfM0JL5MyW89rfrjvLhRwz2QWge91buLPSxpfby7/we+Sf8cPpo6Mj5C
                          Kpo7fwuQvdHlvb0OjxM9R8rzPFylCrz97NG9xAE9vTqfH72BEmq9IavrvfhDkLv2NBm9dma+PREt
                          pbx+h529sue2vMk8hz3nO6y9tZwOPB0+nj1MZec86thoPWd24r3RNgq+MUzMPYvPAr2YhMA9NfAR
                          PVZjmj2ka5m9LRgqu1c8l70ua/Y9FwisO4L6WL0LYQU9GZ69O0mZJ728rnQ8odcWvhyj8jyu/vc9
                          zlWHvMXxjbzZWLk8m5zCvSiigL2MaxW9h4M+Peb+kjymIIw9CopfPWiV/btY1Tq9uL+gvQD6Rb0B
                          c5+8yXKEPDS+uD1walw9tMQbvBTGfb2j7wy9FXCKvS1Xhzvlp6I9WUK+PdSthz1X+oO8cOjQvDNo
                          gj09a5M9PWddPjRcmj3puB4+lqdbvrmtBr2gpSa6YyscPj2k0bv7zOA91enePYc9q73XOKS9DtOi
                          vgMkVr6ePWi+sJIwPvxc6T1HlAM+LtNmvY45TL5Qn7i9jpc2voB0o72LMAM9QmyQPaYECr4PggQ7
                          xQNuvilZijxi89S88MTLPY3cA74CEjs+9zRIvPkPh77CfSq+a/kQvTIPqT38+xa8y/n7PMLMoT2r
                          nky9LIaAPcCYo7u2pLk9lNhDvTQOKr4OYuc9wwjfPLDW4b0roKI9Z4BIPbYXATwfZ2C958RnvaPW
                          gD7YgjC9O/+QvRXKqL3EThy8dlfBvZPlCL3nheW8Oq/uvDp+AL6cGsS8vCZgu6cZXj2lFOI9aJYN
                          vEpLP73njUu9djFJvBdkUz2dtHg8KA1pPZ/5Lj1N+fe82IPHvLRj870nFvE99GcKu0wM/bwKoxs9
                          oMAwveISaz15PJC85DUovGTaJL0lOs28slx7PKmkprwnSbC8E38FPcxY6L2llwC+bP/XPaBSQ7xi
                          raU8H4/PPdhr/z3Q7EK9fs0DvjzrZb5zkhQ9JbOhPeqGgjx8l3O9dvjyvQTGKL7S7Sy9/fwKvjvD
                          Zj24SSQ+llO8PM5voT1N8449ZC/1vT1E271MndW9yjXJPbJOlj4+MIY+hipSPmTGPr5aggS+uYAP
                          vu9Wdr75B+49UqaKPU6ckL07WCm8XtJ4PaiJ4DyC4HC+o2sJvlzKST5yMWm9afCWvSNT2jz16bA9
                          IkUKPUKGWD1OjUG9HcQbvFsiJDqwba49hnbbPMeLjj1bwYE87q0kvmQt+r3d3B8+EOCcvNB9+zwe
                          4Yu8wxR7vYuBfDza4QS+eNxsvs1LTLzVqcU9TQGRvWVKzj06hIS8QVKovVHmV73LPEG+bruMPFLE
                          Bj0ba7Q6MV0ePNKzmjwQadG9BSIJvKDSz7s01go9SRxsPuEXm72UM/i8NJodvWvjJD2F/fm9a2C6
                          vum4rL3rGwY9LKaEPqUiQT5gHws+dQDjvdykLT00bwK+zWg5PvIR3T3EJw6+NxLAvcSt2LwJwto9
                          AzmmPfDBDr1Jn969gfoavd826zytigq8MsXOOxkMOr2sfbg9oqPKvW+COz2ZdRK9tJwAPpY0ab0C
                          Cp48A8G3PXD96rtl4do8I4jCvRwuabosh/C89zLsPbRI1b1NoG6+PyEtPMV1k738a3q9HEEAPgUI
                          ez0spr28aBqPPYYvGL693x++0EsAvt5R9L2UAjA+F63pPUgYz7zCObY9/keMvr8DV738oze+EqEg
                          vi+tPD3CrYw+acwCvq7adz0AV3a8MyJZvh3Gqr6L55U9tyUqPXt1DL6OQiW+rr9Su3zDjT1WJn49
                          BHRSPl4/Sr1oERQ9wuh0vgTkIrwxir8903VQPrQXfL45IF8+JbaJPSrLqDyqHw++pMYHvVNPobym
                          Ea49GWxEPDGodb1X1Fq91UFbva9LnT3up389PvxTvAJokryg0Xw+gdQrPl+GIz09fx69ROAQPbqJ
                          FbvJ/XK8o/+4vapkcr3JZ7I9G5KBvSYFCr18wzC9uSixvDq13T3/0sO8KVJlvUHZDT7xQMY9ZlW4
                          PRwY0rsxvlC8Mo8OPTFrcr4tQ0U+cjnxPfOXCD746gI9fVItPcNt072lZeg7AmZvPpuPHj77QkY+
                          2HETPq0kdTzLap295Ku5vc9rBj18N3Y9OQ8DPJbXMz4xCY6869bEvWzDcb7hpwy9h1HbvYm8kj27
                          qwi98mnQPWQkRL0ctlq83ISfvchZLbwS/Xw8N9NxPdyogj3JGt+98m0EPZFYH762REc9I4jJvF5W
                          IT0QKcM9VBJsPQ9Pp7xklgE8XDaOvaiUvT0Sd0+9sBUSPSkgYr10G4W9lkvUvTfRQb2AcoG9sQZb
                          vQBCrL3ovks9h1pHvH4zsj1qqt49OaWEPYVZJ71ylLA7FvudvQlz3TyKfxA8UHPpPV1Xgz5+bME8
                          H2BJvEFJsj2Xrwe+ZvvCPc1co71a9Zu9xA2PPgd+Cb7nEGW9lfCgvqFhJr/Qdj49FmPnPbIJuz2Z
                          Lp0+VUUxvrIrML9NqDC/FoBovdELhbzsLsw9GCd3PTm9x70wjqU9PDXevXJ0Hb6tsLU9lS6LPOAA
                          8z2+XFi9kcNYOzMW570clYO+n33SPCC6AT60LSw8SM7xO3m+87xkVSE9QYIjPeG98b3pOhI9MaCS
                          vv+1FD3nDwm+qRhIveThnb7KtCm+a/dYPuwAnb0kXXi+03lBvjhRTj7WFkI+xzNHPren1r2xzgy8
                          ZvcNvh0Rtr60p6O/m1ijPSJ+gz7ruZO9w5JLvgIKULzjN9+8PWPrvUiwFj7CFbS+pnIIPw0E5T7L
                          /dO8hPphPR9d1778L3q+s9OwvrDFhD2JHVw+Zn0TProrjDut2v89HCDnvuCcbL5XldQ8I7MGPuSz
                          Iz3rO1++smtXvlPKXL5N5Lq9f5kovRVcEL4Ox5U+7GbUPXc9Rb2Kay++GfyyveSL4L0TDgA9oCDS
                          vJcwn7051V48zpwCvWrkgr6966e74cTFvVHcWj3jmBe9x6DuPCiX0jygguI9gfEIvwI7Rr0hn4+9
                          T1OHu5kCLT1ovMQ9SGMVvivZ2jxLkEK+wTo7Paja5b2od4e9kweqvDk/PT0J+bc9Y31fPZZgJ77U
                          aTm+jeCfPTGZxD32auu94keOPb/M1rzhZuo9ihJHPXff17yd6HC9O3KgvhUmmr5a6Ik+kpl4Phrz
                          ET25vha9yu75vQGBl74hVAM9eANWPjuIkz3tlSK+Om/VvUy3Yr7/FEK+1Ah2vUtHoL3VsEY9fwif
                          PQHpYr2mfda+XN6Nvjc3Lr5Ougk+bO2VPU+K77yqHz+9I5EWvvrCpzybZ8C+OC9fO7v2STyYRsM9
                          SKawvL7ADj2i5mq8M/UEPgaPBb/0DoK+9z4Xvs3h57x/C2899yPLPbb9AD3Iud49mbizvRmaZ70u
                          Rhi9OizVvcF3MT2O7bo9SIzHOmiRIT5N652+Pc19vpW7Lj67D9a91AvTvYMRJL4KZ3+9ZKMMPjSY
                          DD6ztlc9osguvuJKDjyQ7Uk9of6wPQiBazvmT3A+Yh1OvArSW70JYoS+8mxNviY4T712O5k9SP5S
                          PIcdNL02AIs9tFcjPfoGDL0Hpqm8yi4UvKH3LT6C3QW8deu6vaeZbD0OgVO8orOavXAPDz5nnz69
                          s+uNPXHhjz3puWO9TFdpPQPjn7y1Bbu9ynLqvDI/H70jweA8fHmIvREquDypVNw9adk0vCXH8L16
                          6Li7sNUDPdEtGD1VkD69dUGvPaviLTxup9s75m9hPNBfRL2nDyE8xezDvXk8BD6im+I9tZwKvXh8
                          lL25ytQ9Ke09PDdH8Lx46B4+fN8svGc9IT6B35A8caWFPXr18Dvdv9Y9dxroPUF1Iz0y1po8Oexu
                          PD6AvzwU7ZA9+eiBOyNrsz1afwQ9Jy5wvRf++zwUevq8CQNtvSECybzwlxE91LEUPRdjUr3S7/m9
                          2+D+uwWA1b0aBU68agz7vBVZAL7K5Yu9L7uEPX3uYrtsigq8JgqOvTeJmb3F44o9atK9PNmRJbxv
                          LwU7JCv7vb98mr7RrAu+4C1mPaHlhz0wtKC85LofO1uNK76U82G+iUPbvUZQzj2hjCA9amZUPFWU
                          rz23Oos9JhREvZoRy73nAoW9P0EDPrTmoD0YZhg9DrGDvchwTz7d3J48Mf8ePonjoT1khWw+1r0Z
                          vamjIj67RTW+St+SvZXQ7r1vU/a9GMgLulk6k71SCzI+M2HEPEprOT64AVo+sp6SvAUNJz4Gkg0+
                          VWw2vVh5qL3xUbW9jKJJPSZ2Yj73izm+/smaPhPxu748XBQ+Ovq9vR4lOz7h+sq9kjKQvlZrsL5H
                          pMu8uCOHvuuvNr5XxkI8SJLxvOjHdj33qci9P/LBvoqLoL68IBW+Bj0BPTyMUz5waJK9yBbYPYmJ
                          QT4ukhK+eYOQu5lvCL16fxA+RKR+vJsCpr2HYPG9zpGXvRHbqzzWsZA9IooBPQawrj1my7a9SabI
                          PAwUVL7d7hg9MQtMPYeE4z0HoBG+SnWuPYhX4b0pawc+6scjva38Or21rPQ96xQVPkThyb1tiBW9
                          AUiKPK4NWT3Mbve9DCHyvbWxsL0kfZ87rEsyPoQPEr0O5S+9RPQ4PTL4BjwN61K9NITCvVMRyb2n
                          OHs92/qpPVSiZz2C8AC+NfjqvacWxL0Mwne981i+PVDp5byiHtw9F3SkPYkFaj0wQee9zH2NvAS3
                          ab3ykhO80RG6vdV8gbqQUfI9g23IPOw6Or0mvQq+v+H4vZuiTLwJgZA9hPMTPmjZ3by9RKs9K8uh
                          vejisbydgB29bE2ePYX9nz0Fqqs9gLLKvCArhD16KD4+J9CCvYWsHj462ks96x3PPK5rrT6JIOa9
                          iMRUPesXRL1hJsW8dkoiPunf8z04lze+cLwZvkqZwbk5AP08ML5VvlATFr6F3c69x7WTPGurHrzx
                          s+Y7NaMcvor7oL21mCy9mm3/va773L1ZPSO8HUkAPedOQT2IPmc89JYQuxxoqb084gI9YOMivqO1
                          Fzw8Ov08wh4DvBFpIL6kzce9hv5xvl87tTw6nwm9ZFOZPZG8qbx3iMs9H51RPmeYtL2++MO9xg0M
                          PZ31wT1qbyK72aQDvc/gkz2VQOq9fOQ0vntGYL4z6le9Cpw+vRJh0z3BqQg+3u01Pb0bILyrYom+
                          f6lsvpQbNT5abJa9MgBiPTq5v70l/Qo+1y95Pe3Y5T0vZRi+t6QpPvfM1bw7rwe+npluu/mWED52
                          e9I9yim6PeLoEb6tqhg+A49Ovt7U7L3tnrk9Y+FovqaJ7DzodI49Oj0lvarPJLswpDy9Vd5bvT6/
                          dL0OnRU+uLKxvOHhQjzdoxI9MKh3vPOvATy6Exm8ms7AvKVse72SVp09AB/xPU7YGz7Z/5e9pnlW
                          vjdi9zs2kEy+pzKqPD82kj0BzGM9C3MwPZ/gizwSfC++HZrWvdcM+731Obs9XthsPdr3sz00KwK9
                          Nf+PPPFclb3yQoA8dpejO4M4ID4zM149IOHgPNNYBL6pKCo99Rt3PQQqLT5GY4y9/GXIPdsUaT0R
                          ot68k3havHb02r3ov2s8nNxBPGxqIT1vIrq86LRpveBKAL3uSY69Ixmdvd8uSb1p6gA9KyPlPFCc
                          dL2G1WA7u09LPDE30L0op5M9U2OEvDOrsD3hi5M8jv/hvRUkIL1VWly91qx2PNACBD2uL8E9l5FL
                          PC9kYD37bdm9TnqSO76PF70zY6u8x99hvUVKULzXu4m8HGEpvV7knzzNZzG+0UZLPfeuxTv/PzM8
                          i/QePIMYhz0xc5a94vPWPRHlwr07J9G9w/LSvaL0TL2SzXK9CoXZPYGilTyYxBw+MMF3vfbQ973D
                          lyQ+5m9OvIaofr3y1HE95GWcvUvgFzwA4VQ9SoGoPYFZIDyfCtk9SOnMPd2EFz3yCla9lE0CvvZZ
                          8bxfDwS9xOOXPbQlDDtitrk8XguFPovc9b2u99A73EqEPekZDry3l8097YRTPVBMyjzMBI+9mOAn
                          vnhJ6jzhQYu9slQHPZ1YID6EwOO8BXabPWtW772MbuG9XPnivV9mvz0cEN28z55kvfOqFD0Y1Lk8
                          ZNgJv5EAur1VpUi+JQL+uzk8M70tJ089QBn5vRkggb63bgu+Kv/nvUREmT0wRnc9UyJNPRLRTj3w
                          ids8P6EEvj89rjyIs6A9udtvPY8N9jo0F6A8mONyPWAqg71bB1o9NnIovDEqAT2d1p89vvJnvWrD
                          wL2u2CO9aykLvX0Ji71Y+bq8+pnrN0wImLxitEA8klqnvZv6zr16OAa9QqdMPQvXazzwjhq9U1pL
                          vOVZgbztVrG9h0SJvUu4z7rCuUo8bW9ePi09Qz0DnCW+9GCgvaRFu73D2PS8JaSavPpbAD4f1UK9
                          x2IGvU3eLL7Hbbi9TewFveVrdj1kJVS9QtHXu8Qo/zwWeHQ9/S65PZ59uL1mqiQ9FPSQPVMwTD0h
                          Hhw9fC4nPQh+n7yMCB6+qbG/veLOVD1HbkW+97tXOyKzXT0a/N09bi79PKDX2D3BZr+91CxFvo3F
                          q73eWfa9LdExPV1zwbz2Dea8ogQ0PXwj2j2yOyQ9awEDvig/8L62LTI+uRTrPT1RMD5q/LQ9lSiE
                          Ph1E372qyHm+x8wUvEznjbxLJhg+LC4QPlorML1R70a+CBWQvsPqtTyt0V69g3QBPTcBWT22TQS9
                          YMSjvg0gmD2IF++8aJfnPVDZcLqKPVM9HNOnPcON8LwK+w29CWf7vUqkCrz1YE89LBD7vI7/8LzG
                          g2680UrcvVq2Qz49wai9MSabveNqar3tcrq8coKePPj6jD2x9Gg93xIOPmVQEL6fCCu+1SfGvbR7
                          nb3nnwg+ZOUHPTi7EL0c/n0+vqIQvvW7rr7ksmM+tNj6vfgruL0SQKq9dTwAvmACbD7t4ZS9ItQc
                          PoZsX76/0a6+kb4/PfwIET71RPo9czRhPl5Lhr0PeGC+BAfBvrqVm71YiX49eKSlPc5IrD32ccg8
                          3h+vvoVY3r1Dyxe9EZGJPI3hgLwvJgs6W5R2vPSgrzxoOuS+F/kWvvojwz2qD/U9Om6ivf85tryO
                          xEu9hrlHPm7MrL4LroG+iOaJvoH4L70DvrI8hOxYPWkVCD6Z9+O95s7zvYLlTT5BC8e+FeelvcN1
                          fT2bH6A9KH8mPm5Q8L3jXze+70bavuLSnb5htAy+OmOnO21hhD2EIos9XxR1u7Dwv7u6S1290dpw
                          vqDzgjyu3gs8It81vl3AdT1qh2I+ImWFPdC/Xz5v4Ng9PyJDvtDR6TxdYU+9QjKIverqj74sApk9
                          cNqWvQ/Hsj2mr10+N8mJuz5HWbycaSc+AOeIvocFlT3wnha6OFJBPr2JDL0l4y69JxcGPZhmVboP
                          bQ++azq4vUFFmL3LUIc9ztQbPJFmSb04SGs8TrmPPhk6yz2fIQy++hSPvTVwfr2/iKG9+Go7vcR5
                          lb1/wYQ87w5YPr7G1L1BUEI9VvYyvaNEojzjLik+nyOSPc5th72b32u9PvlEvuDqez09aVA86GFE
                          PaTMkT4f60++AVzBvfWobT0WuBY+AquAvsYasz1LYe89P2PjvadP6LxEuR++96lXvjsLhLyRR6k9
                          FK9Ju1qfMr4pJf+9WQWqPfD3TD3EYXa+6cyKPRXjRb6Ckj6+xtFaPUqzo72Kqh09P+MmvYtSiL1q
                          NRU+cUSAvFe9gT3O2ga+J10dvCCt6zzikd28QQ7xvKPre72KBJg7PTjkPWJQmz0fL0k9lsbjPUFI
                          ELwH2uc7q0wKvk4aD73kZJU9H4iPvX2OLjveGNm8ocF0vO3cNb1vlZO9lt21vRjVZLwyf8s7Y8xJ
                          PDCmKb0S+ro9tsZZvVqXazzio6m9C8qZvd0djD2gDd08Y5FNvGBk/j1FXqM9Wu4sPl0f4L4YBLg9
                          4jMaPCtdtT21al69+B+XPnQ5Wj3eKHq9VZMFu9jrb76P5DK/MDknvmBaOT4RyIg+2eFWvrpJGL6x
                          lg6/KGeLvmXxDj4iWRG908tqPKeVLr2UKY67w6HrPF2obL5znjk+Y2Y0PSFkjT1LSE29gqQXvKx4
                          Fz1iZKe9uKiBPOH4Gz5vIs89dbYZPuQd6bycZpW9WVagvRSqnj2doZG+2otbvnXhMr7dEsq9kNc1
                          PQ/XMTxowpm+9rOuvgJYDb5QZZq9W/48vr/ldr7rHmM9HAUMvVjZmL6WrIW+kgOovlnWM75ShrS+
                          BW0mv5xHTj5TQBA/vkEiv85vcD58Y0i96DLwPc3IAL57eQM99VaPvs0aErxkg1u/eqBXvNbduDtS
                          8QS+rfiUvioOTL7IgrK+SXuUvmz2GL+lgp2+TQVDPqL0/b52vHi+cYV8PdOXTz5nEKe9R5KRPmNC
                          NbxroxU8C3opvryAQb7X6to8NDUsPaw5uj2UFIs9msAAvvk94L59TxG9vlD+PRJRfzz+TAE9dp02
                          vC6I3L3ih969IudjvlGI9bupwXO91Ur4vPl/OD2Y7i28eFeyPTYiN78+/xQ+l0kMvvBFTr2z9Gy7
                          CFS4Pf9+pr0NIJC9OHWMvYoQ3T2MeRS+zY37vTCiDT2rBAs+r9gpvfT6Dj7ZMWC+ED05vNpFW77B
                          CfQ8jn9OvUj3tT11UIo9aaqTPUS4AD5/5fK5Vn3avN8ys758cAy+tUa1vtWKnr5hLke+R3kIvqpi
                          BL6wydy+g76avDsmpD586Qa+P/EcPihVJD7syxU+MUXLvhxFP74+zue8gtsRPj3xQjzG7Bo93oC/
                          vVEoUr48b8O+6TPCvSW0irr136W9hhaxu78ov73y9YM9hT2DvlhI5b0x8Za9IrvAPWeMir30yZC9
                          HwQHu5nFdD0GO4I9XOiavf1rG75bctq9duGsPUfxuD022789hX4KPTWxAD6JiyO+joGIvQ4DNb7u
                          LO89ME3rvHtFLb2ZMyo8bLUxv7NU37784jc+JqQrvrDvjj3RTEo+BcyfvGQqVD4Q3wy+qQBCO9u7
                          I7y64I++6iuyPQH2jT73oKm8KGqYvqtzjL5bRZW9uOwBvqYlsb3av0g7NKQwPrrXKzp1CgW+8RoI
                          vD1hm7y3IYc9XpwEPQ7OLb0Z7GY9gBT6vD1hR7vea787s5KFvQlLlTsmdnE9kIBRvVGTUrwUFPq8
                          ZUiDvfdX57yMay08e+PAPFaV2LwKbiq9za3iPFAO6rwFJvU8fPcBvpw0XT1YArK9wybxPMAslz1p
                          /kg91FpQPbEvwjt+JBW+hFIYvXWzbT2brW+8F8KEPBBYsr2HSqs9m7HZPbAIaT52chy+DJ7iuyK3
                          3rwdjRI9pbK0PThy1D2UjAG7LKcRvtNJrj3vqho+CPFUPdo/fT0qLdY9XAanPW+kH71GdCe9hGNe
                          PQCadD1PkR292DAavYeTrz3Pri8+NL4vu5bA7r1QjkA9e3rEvKUkKL2I48a8Mw6YvPn3JboqfmA9
                          ByqPOQubPDw8KjS+zre4vGEYpjz4txa8xw8uPmMTVT4vSoM9NzuCveXZjz1Ku2W9WNLROun7Yb0S
                          Pg+9MFYOvcunjL2CCio8vsRQPHN6GT1K/VW9FZmTvqO8ub09wgo99MmAvEWHmr3ie768FmHwPP8p
                          ir3M7OK92/M6vecXAjvbiY+7D1wbPkAZpL1xz1c9W9/IPamPwLxUFrW9yYdqvrl0TbwKP609VhQJ
                          PpvMt72cB8w9fGlbvRkQALwJnN49vCY9PdPDBj4NRYO+DPrpu+0psrpDDpy+UHO0vLRXLr5idAq9
                          zwJPPW/qcL1m+SK+5N4Av2U6h75EqWO+G5MQPl/ZnT60vII9hVKpPhjX7j3ujSS+u95vvvvVmr64
                          NBe+dD00PW6Uir0g8WA98HRKvKyYbb6XLW++WUG/vDmE8z1WQay+Ry5gvc1iZTzysWC8GKlDvp+F
                          Lb1u4p87puoGPuxZAL2n1yi+CUpovUfYzL1ug2U9Vhv5PSfXq7xkqwk+W7AsPTl8GT7gjkO+bxym
                          PVGX1DxzQIM9OjEPvmbfcD4POAw++iY5PBP0Sz3nXLU71DOoPWSKZT7BuMI8QxaGPI1PV71/OWo8
                          YQHiPXlTwr0C1Ck9IPTFPfAWmT1nQgA735WGvX5AsTuJXMi9WvqjvZLSEj3QWXQ84iZdvfJjsT0d
                          smy94teTPeo7o72/3xG+ZeguPQrKrrqtc789JOKpPLBAI7tUQKC9X0MaPDrX5z0r8GW9C9BbvVK0
                          Kb3Golq8oLNQvrXSzzxhhWG9yjQ2vgFyh72hFEu9SpAovvCuYz1J/em9WWaiPatYqj0D3ra9Q0UZ
                          PZRJxj1bnBI+mU4WvYZeWr7vYnI9tQCPPCAi3b2uv609ilDHPZM6iT2yUbM99O3vPGvmLD2yzcY9
                          OLLeu6tWBjxCUpw9nOzLPQbvCD3yA3y+GHFZPJabl71iVES+p/CHPIO+Vz7nzUo+81/WvO1Ssb1C
                          6YY9DmkVvhoNNz3BH4q9MQ9dPdP2Yj2+t1g873Z6vVzEzTv3NiK9ipNbvbLITjwjSYM97vONPTXv
                          SD0fsXA9xCP8POrKUL3pktg5q74RvqoGD7xbvI69XEQSvU33jDoILYS8hWwcvqTjkr3ZGxM939yp
                          PUTqCL4VURq9XMjRvYMtpT2f95K+AGgZvsoLNzyJai8+3b2RPdHBhLykqSY9bdXsPY+ImL4c6TG+
                          38rnOpp5iT3i9cE9Gp0kPmm/IL0dTtc9a0OlPjFWf70GjpS87QnRvIH33r0wC2S+ELlevQPK9z2H
                          iNI8UcSFvfCd2T3Vu+a72+tSvQocNb4RF509CIDUPbRnBzsKMNU7Q9YPvr7OhT3Rwk0+AHcpPs7Y
                          jz3nMjS9n1gzvrpazLzbxkS8MDimPdCrFD56Ha0941SPvXNQC75Snw2+3BfkvSokML5qz7g8NbNb
                          vQh70j2PDLS+v14dvZx5lT2TZtG91YFvvm3I4bk1i/q9ZsmBPhKkUr6wTc26lUpdPZRd6DxenJa9
                          opk2PYRXJ720nJI9tzVePCW6iDvSxbG9HrVyPHeWjT2KE0c7gzeRvQjeDb4F6PS9hj/+vJdZkb0r
                          pvS9k2KZvIYZ6bwnrHo9nNe9vXD6iDsaDXG9nVnjvdX4nrtooOG9KUN6PUWikb13PDM8i5JKvUuo
                          7b08Xj07mSUjPOtqTT22yLk7Cg8QPbBenjoEdo67tB0LvgcZHr1otme8MlCNPdVxhbssr4S94Vw7
                          vQRUMb5UIDK+8fNdPeh7pjzy0mu9Lpa9vIqoxb1fn8E7PfO+vXSLJj2wxQu+zEOfvH7wK73HSqo9
                          HS+PPJJGGD3jnKa8HZ9UvFQJ673DYBe+ia98PVfvhj0xmLM9N0IKPlPGyr1A6PY67GUhvowvkL3H
                          RUs+VVcpPjs9Mj39X+E9WmwZPrVUGD7fajC9r8/DPeudLz5KVgA+3jIjviRth7xcEFY681DIPdMr
                          Wj54bKC94f4RvCMbxjxqyaC9Pqe5PZLE9DxHAsw9JHfgPWixtzy+2he9Vwv8vYXHqTzslMC9VoWW
                          PJmSwz3SrAg+GwoZvgQcWr1dhm6+uQIKvierrb3YBZW9QERfPZ1TwzwtRGC9vPCRvXCVpL6N4Vm+
                          N1fWuy4+s7xMtOC9dxcFvje3G74nugK+rptcvagoVT0Kkw0++l0XvOEdXTwmIDg89u+TveuhWL71
                          1cU9CLODPfP6Xz7FP1M8KjjwPHwFyT2XvHK9iBnkvQoL9z0dwhO9A7B3Pib3a7137Ze9/6MDvoUF
                          mL0crY+9wRBhvU4ep727Giu9gn6XvbBjj7wOXQa+qsb/vC4pND32ezq97c+gPMhrUr2rCcW8J+GR
                          vUv7lb1dsQq+0LTJPUucpT367T09oAkvvXR+4zso9iq+faMBvsn6ZD1KYG09ryoLPcFzEb6CDjy+
                          f9JgvIgwzb2rLpI9wVbFu3XEvj0EqL86sk2/vTXxij1HByS+J2lGvYf1gL0bhK09BCkQvWNn2jwR
                          ba09tODYvOQGib0mr5o7y+Q3vgq8k71G35c94/sBPu50yj03EQ88yjjuvebeArxHfTm+jiEEvjn8
                          qz2DML29HkmXPvj4FL1vyqy+4sE6vPg0YL69CIO+l3PrvDVHOT6efD49IghHvnhnjL6Ol8u+wWf9
                          vn9VdT2esLc8LKbzPMQuJL3iHYA+BaOuPavLC79Lfeu9Uoc4PVNwLDycVLm8llvFOsFE3rzXHj++
                          VZeEvjtOi73NPJ89kI8UPZIUBTx0mYm9+CQIPXAvWr6pTjG85ybQPYshqry20qw8mViKvJMH273E
                          lxw+z99cPbnW5jpqGBK8rW6wvUnhjz1b08s9rnOIPTik6T2LR5E8Tb+XPYwqpr2+TTe+laX7PTay
                          tjycZju+gzXaPcLXSr2ei96+08RUPaPZqjxCD7c7CGYDPlkhiT5N9kA9jN0pPOc9L71DFZa9HJij
                          vgKPu7zdzuw9bu9QPmSo3z3LARS96Wfuvat6G77blIA90JGyvSIPfDwyno49EdD0PBzWir6qG6q+
                          SrRrPcV5pz2BjnK9fq/vO2SXQT23D0g9cKPAvttVpL0axZI9iTRkPmkpSL1G/DK+8imGurPdGj3e
                          Lh6+pneEvga3hb5DCOW8KtesPPpMaT1PEqY9k5ZQvred/72Xat+9Siu2vgjBZ74k2pQ98KSyPUYm
                          Yb3i/7c9L6+1vdNQqr1H/Pa+8GxkvjowxDzaEmQ+8+WePuV5kr3HwRu+jm9Pvti8Mr5WFjs+MlNw
                          PjKuiD1d0Ws+wMq/vZpDBbx+7qK9v+mHvX6GjTxz+KM9Z7fFPRCGqzrrE709sybgPPqZNz4eoqA+
                          CyQHvYihfb33qJs9a8xBPvV/jL0XJPy8nYGwPSMLGD4Xldo8IFNqPfAmSD2fku09IcyLPVkcC75a
                          h+295LYFPRsQGTw52qk90RqtvB9Cpz0bxXi9090+PYY6Ob3/UBq+pVuCvNmlpzs5F7G+E1HCvrun
                          KT7KNJU8lcW4PO/pLT111wM9V8Y4vtVCar7c99a+w8L7PePsGz2L8AU7vhaSvZkTdj4eDbq+QbQY
                          v/U4gD2o7uQ9LBwHvaJ1NT42aWC9xJowPhyIN75nSTE99d89Php5pD7wmfM8JNCfPWlCwr1Kdq89
                          VLXBPRr25LxOh+K9HfyxvT/X/b384pO7ngtXPvTGIL5/DM09HiPPPXvgsjo9VtY9LaYUveK/GD2u
                          qZU9nXEIvdtbUrw66i09yjv4vdCIkT1ZGPa9+ZaAviEqlrz7rxk98xWyPXPm0TyeOam97dAfvsfS
                          m7u6GYC9DykIvpuYiLyTgr28lUrJvH5U0j3Lepu9fwCUvPb0Uz2P/Tg9HsB8vWKHAL4h7nY8TEfU
                          Pa8wVL3I81o91hM/vXxPKbzclhw99RX3PAxF3L08jko+0ldVPRJYAD48mpe9V1Givbi90z1hYrQ9
                          K1roO3WCHr7GrHE9bUiJvodWFD0raJW+0HSivWO+B78/B6u++Sxtvj09AL6Vmwg+QVTZO+qFwb7X
                          vj2/z9qoO85cvr41wi+/82tLvkHkK741DNy+hB2+vtW0ar0Cu6G9YeSLPWqDGb/m456+TgyXvkrn
                          iL4zScC9KKOVPPhSoj3SHJc8kZ+NvsHTIb7Rate+AgvXvZl/oD2dVDs9zE0HPf5QHL3VONc9vYjs
                          vhnnYLuMuhy9vplWPopj67zHTKi9PFSjve7Tbj2J4x2+PPNmPiZOkD6lROU+WRYIPmQEBr5i+6w9
                          wLCyvPX4Kr+KQSc+N/hDPd1mAL65bVy+FDISvomFtz7yObC9e3WLvmPR3L2IrB6/6k75PfgQKD7s
                          rlU+N9YqPi2zPz1Jlq29Y9AKPonJLL4nNWi+FnLuPSZsVL64koS+n1RXPkV8Aj2ATIq9VDgnvotf
                          Bb6mheo9YKDwPaglJD6QywW+naAYvxpowb7IKzE+iugqv5CwAr1y0gE8jTwGvnmgkL6W+E8+UBd+
                          vmuHULzW4xE+TPQ+vsyfej3GC4u9M0bBvaq+oL5DHQS+vagtvX3Tnj2Xte69ZS5LPbkT5zwsuQY+
                          7Jt1vqF9/Tx+YAg+A0WIPJ/PQrzysJO8hI1sPbkaLrzodYU98bUWvgbGPj6E5MW9t/kKvYvubz28
                          0Qm9NUqSvnF8Or7ifa+9LQbTvc373z3dBLc8VETYPJEpB7zoGE89Hh3pvK00YLqeYv69/nHUvV4B
                          Wr7kxn6+AYl7vvwRKT3/BnA+x5Z0vumNFL9daEO/hdZ6PjrhVz0pXIu+YlznvmMBob051Mu+2Oqa
                          vq5lcj0PA1K+rF1Ovn4Dl7oNh7K+VfSgvnT8ur7OtNG+gEaQPQU7ZT3Hco67B2UYPg8il72f1LO+
                          3nCdvXzG6r7HEwQ9bgwAvRrEnD2h6Rk9aji3u4kLRb7ezKQ+bpFXOy7Epr3VNfQ94l0ZvcqtS71Q
                          lQa+UWaPvlZF5r1k99i+LehcO40wuzz1Jta95bkNPWn5mr6TCLi+3YNOPM78QbxsEQI+ktsIvKgU
                          Wz6/MBS+eMeBver6FD5L6dC8STTJPZsQZTygWaE802yAvXelRr2ZjLU8w36YvVHeljwHJpA8Indp
                          vW6CiLzP5Bk9sK0XPlG8/D1Jlfa8L7Rcvu8N+rxG/8+9Xy/5vHfBvj1/O/u9zEeDvkmLJL1mj2i7
                          fBQBvWWhlTt7V+K8NUCNPdQkOL6ABdk8syHgvNXFVr3sCLo96iKAPoqeML06sMO9Rir1vL/s+z2i
                          gn682ERbvSgqAj6JGRu+FBKQvetiKz13Bhu9eRsqvJOb47xKTjY9K+wCPqx+i767BUQ9obv8PaXK
                          B75gMj++yzkDPRE8Mb31rpE8EBapvI/se7sH6BA8TO2qPHOQmjt8F249C0mOvaKJUT3Aza097Mgy
                          PDCAc72RKaO9DjwJPoz7ej1RX3S9S/SUvUh3dz0qju87th6avYwoWT3zyus9LCwDPZCLEL54xpS9
                          c441Pea3BL2A7XU8mqELveqqUrpmPwW8AGngvSfTYL2kPIi9dV+VvQ3v27yBoT09i1OuPGTzZz3C
                          4Ry9/sASPcCofD3Oi+O9Qf3jvbbfjjxj4+O9yaVoPVUqhDw6quE978DBvTZMk74Bb+u9+n90vWCf
                          Fj6k6R89fQHeu0I9FLwScYS8oJnAvTNI2ry+gRM99rQ2vVQMPj2nj9i6kUQ4vpjzz70bNIM99C0Q
                          Pbibc72eAoE9yPQAPsEhhL2TN6Y8t/rKvOIEgT0oQvC8rBMdPuSROD4F7mi99i6pvVu6dzz8VAY9
                          CsonvYp4EjwHEW48ZmAgvro6FzzFmMe91fjYPICOij0bLWW9qjCyPVjACrx2JKe9TidEPdexwr2R
                          cCm+f2aUPoaYpDx7KZk8ttoCPRI7eL4t2sK+ZX5nvJO+Jz5jhEQ+tHdHveUCtr0Hovg9C3iFvC9K
                          vL2ZF6W9I4rCPTU0iD6ro6A95Y02vlecsjwXvx+9EpNpPQILzj3AE8K9+teSPc6R3L3ayqm8zH7i
                          PJ9Xe73Syyo9oI4mvH5vp71GyJm8luU7PUsvDT6Ta7i93OOjPP6sP74nGb+8TuKlPbCN8j2GeTu9
                          OERCvcoX7T18adE9f8ADPtNHmb0pCww+cPAHvZKG5LyQqQm9HibKvditND0G2je8vzvMvVCJxTzO
                          Ram8xpx6vbsps7xySn+9jvtYvey2U73sIty9DtApPQxMi7vXzau98FjBPYFzCb7jDvs9x1zPvGYP
                          RL3h1YK9NNbXPEgtsL5vzz47XTyGPUHJoTnwOOs9ALtcvdZZmb2IMxA90/yEvsnQUj7fvTs83nuH
                          PbPYIj32xkk8E2wZPm3AZL6DPS6++HKbPq5dKb265Qk+c0MovRfr0LtIT4a9GitpPRYWBjtk3Pk9
                          gyoYved2+TyMr4C7g3S2u4IBij3QY9E8WiJRvQMFmr18ooC9nK5evJg4lD1+g947oLjoPTukvb3t
                          J428IP9xvOQxyrwx3Ws9aBo+PUOf/r3e7eq74S7iuwVA970s6oU9gAibvYiOFb5KRSg999SlvS0U
                          IL0ZpFw8jkC6PBjDEDxxlJG9AQyNPb7NLr2c1qY9j77jvfmoqz15G9U9ykhWvoDHfbsFz44974Pr
                          vAVIK710EwM+1jMQPuEhoD2/FxS+mAWSPSitlz0TCt+9XH4Bvo94gL4IzQq9zm6kPHmJwLzUdAW9
                          87ELvlA87T2Ny5o91vi5vfvXSb77rVg9oy/CPUcV372ebpq9jdqGOwCONT0FkkC96BSUPO6fRLw/
                          mLe9eJgxvV59qzz4m0u+P1Pjuz+WvL08rgc+rpN+PvJUDr2I+sK9qmSXvAkrbb75i8+9anQzvRQh
                          7T0KokE+70ZxPeXzLDySjYs98ENxvNsbIr5DUsO92nqhvXlng77eYy+8P3QUvpr/Vb0ela09buC4
                          vS+8N72pCOy+j+OEvpi+27zyQo893BcEvQEvmj0tvN29YyyOO805VT7HZ3q+3vCbvPOwED63uRG+
                          IlSHPTVsHb3kycc9pki8PA5eu72pwjw+r5IEvnOhrT3BAEY+Zvw+vQhlxrymVFu89ONMvVorf7uI
                          SrI8xZHzvEKeATxNvgG9ODJTPPVeLr3LJPq8SwUqPRkamb1BmA+8RSPcvL5WubwIryw7BDm2u8qh
                          R71AafW7jSbfPO6ssTyPL3M7o7WxvK38Dr0l/8S9dWOIPGJIXT3mchS9kNS1vHbi87u187W7QpTE
                          vJqlxj3Yay68llMNvUZICT3wWyC+3Rh9u0ET8rzNGjm64JkZPjRIyL02gnM8FRHSvC+Lr7wOPPm9
                          B+xZPDXY1jwmhyM+E9VVvDEZ4TxgyAs+9eorvbycybz5Nje989NmO28BoL0xabu9/9ybPJCAVr1X
                          8Ou936V7vfSJEL6iZp49XEMJPpVm2TxqOPo5DLjcPIqZtT1r+gM9VxJ2Pau+Zz0rCUe85KzfPe4B
                          370YUKs9gLFIPbKMrj1sSru9IafFPY3hgD2kgaa9gwEevdGA6D07UrE8imtBPYGgPL0/X9u8YIR8
                          vUN0TT3NDvA9YVVZPEXLiD3aULC9FuTVOxdFej13YJq9KFAoPZ/UQr6RY+y89OAovhadbr2WtCg9
                          YeZSPo4lojwMqsm+L5Dzu6obCb+tJ5U9l54sPsVnJDwSP8C7qzKpPsKUJL74G5C+wOqBPo+nijyn
                          SEO6Z6fsPBGN5jtS4l29TJMSvi3lM73PHjs9zGIcvQ1cDT0sqSe9HkGNvI6Igb10jme95qTbvOQT
                          rjv26CO9jKVGO4diZrzy1ze9GgKsvJmbSr1PkzO6HkMyvBpATbxQTRI8zrKYvLcqTjxW2Oa7GRKh
                          PJgJFz1DW5K99tU7vZW3gLzp3/G851QQvTixmDybBRe+fDalvURiEr2dNy898FMhu2NFBz3EngK9
                          HtRbPXMJYbzR9Fg8LBWcPZ/woL3iMIK7KBwIvCLe5L1QPQi+ivq9vV/wnD3gwhg+M6x4PZ4SG76w
                          bk09v8e5PYo02j3eri49KTQQvKQm2jwIw5m+rRdcPF1mAD3x14G99/bXPEWCXT0QOFm99Cl9vUCI
                          pL0htBC95ZOIPUYEN77hhYE+dDKUPWJBmz7iQw++s2rhO8VVMz5X5u69djWYvR6p/j0DSrO9/kqm
                          vphS373nUtQ9KxrvPTLW2r2vTpm+JvTPveSmxL3BMmg9CC8Qv2Q0Jr5jp00+ilPzvnuiuL59dIW+
                          /1PuPG9tFL6t7SC+JekIv6FVj7vpAiU9TQskvtfW5D3nquU9Y7sIvZipDb1JOtG+fv5gvq13kr3g
                          ybi9xINCPR3lDr7gJ1a9abRQPvJKnD0/Squ+wMeFPQ/6HD4kseS9wVhWvXaXGT44Wnu94CXhvmym
                          /71+Sx67HR5Mv7vsP75Q5546/vsfPvAWjz1NjQS/bkgCvsddvryx7SE9eIknvhY+oT7xCYo+uh2C
                          Pi8/Az21DyQ+QmYWPrrkbD2PcvG8Dr3+PJ3bcj3uS7s9KpTLPeXBXT3gcFy9fuO0vbyAw74PIrs9
                          NmVFvYY82TzUxFS+xxByvlxSwb3HKYY9rbdDvlb+2b3JXNe8QssKvnZyxzx51q69/oAvvoBGkDwm
                          M04+K81EPZeV2jwnSn69v/4GPqv2774QXiW+sGfcvUJpLD2j3Rm9EOZDPSHwvDywHQ49GFAjPah1
                          5zzdIaU99/HLPo5Dx71B19g9E1OkvWHG5j1pmdu91h3Ivcmwc72WVEa+ARvYvbzgOj7V9aG+OKOM
                          vi4in7ywncU8sVTdPazYkrwSPu+9NaG3vcU/qr2rnR+8kkytPBOnsj2SZw++0zZju23c5j0TdQm+
                          rQIOPlx0bD5ZYHE+je+dvHM4pLyBsU++IJqLPX0HWD0yKbK9mbVkPvtzEj4vWPs9dn6mPMAX6btE
                          20s9iRxrvDK8Gb4rHI89ocPavQFszLx5Lhw99iKUPTaN772dukw9lWSRPZuWA790NGm+r+SDPXtk
                          G7zhdTe9WS4cPtUV3T2YghO+5FiYvnvoYT0+7eo80hE7vf85/T36otq9fxRyvU7zw74wLSW9XKOy
                          vaJM37xapxa9iJPUvSjQ3jze8A4+Ab0uvmYsID2ucSg9cV0jPen3tr2KMlI9LkNSvs38MrzeIQG+
                          gaTuPHiWIT26ySU96xj6uwhgyr2dq3c9UMZRvj2Gnr1uEgs+iMtMPbYyirwnqrW6OrI8vlxwMT1P
                          Ov48kArsPFG7xL2LBUo9DBsJPZt9nr2Yx1q9lOvLPLP4GL1nguK9qVUGvbi8Dj2Hiha+7tXEPIT4
                          CD7rXYC5Z0jpPJGHxr3GCJa9hYmZvSXIZ7zUYi+8kYSBva89Lj0GQVo8mGWgvC2jAL63m5c9l7ik
                          vQ/2dT3rgDs9LOUZvZWeoDxRwAE+bFjBOra3xL3ZT7897C1YvkxPPb5jvIM9BRqEPJR3Oz7XtKC+
                          DcaAvR5Irb4SdhS/aYOEPM/MA79Rrcy8jg5lvh0JIb7cBrY9mmgvPNexZb5/R+G+m1KtvqFYPb+L
                          JAq/L+3APU57TL4CM4K+BSDsvqKPeb4h/De8hn+aPeVr37380E+/QY76vUJWD76KaWK++/9IvYe8
                          Br3uizy+AqJEPnFRPz0f82S8n5yJvlXihT6mEAm9L8SnPC/pY76lRDA9oQezvVljyr0yG5W+vdkN
                          vUkdJ74rOBw8GADqPOLtMT6v13U7pU/JvRcDIz6h91s9PtVYvrX2db5vSqM9CGDUPlrq7L7hpPI9
                          64kzvoFmGz0eBjy/0qMrvj6kuz6kaI69IUarvmAXH7+D52a+9sDOvFxRsb49PBM9VyO+vjHob74v
                          Yui980eTvPL3YL4owmS+3/RlPvbw171JS6O94W8WvWmBIz0mcqS9sF4CvoEBQz4hQYG+6gYnvxIY
                          Qb0aONa9+HLZPcw/Z75d4Bi9SkVGvh/XoL5PxtS7tz2lPcXRuT3zbLa9qWQFPqykBz+OSYy9hh9W
                          vs33Gz7+DTa+UGwDPjrCPb7pwke+sGyUvnR6DT4ZnY69OEzsvTnvAjw1Xas8Qqa3vFtMAr7Hyxe/
                          7fOhvfiXVD44TSO81S2SvaWXpj3C8xa8DRA3vowbjr1aNiS+HtKOPnM4K77+qiM9HKYhPpvOGL5k
                          RGu+2XGnvfu2gbyAzPC8WofLvWkpmLw8EVC8YmoGvgC9xbwBtaK9jILxvNh7Cr6mVpm9fOASvXDw
                          rz1KV4W9XVPnvdao171Pyyq+bpzHvhxOEr539QO+2zbRvmP0PL7yXWu+QPPZvrjjh76+6iw+lQQD
                          vrMxxD2I8uS9ipB5Pql/kL5fyLk+5PWevZMoUL6XQZc6eMwgvgx2BT4IwKc9VExuvhhtjb4H7wY+
                          +UMgviJhED1Th449tbWavHWf6TvszaS+cLF1vn+Kxr12GYg9nDVSPHnc/7wjME69aP7NPbOeIr5o
                          oRW+tzWSviFMvjyrEw8+IGSMu1+D7T3OJ+e8KGkyvmFmB74opFQ9Rg9OPYpRcD0WROW9ceuCPtac
                          6j0lX7g+7S7duoxcH75Bk8I91VJqO5LGfrwt5sU7FWiEPg6LRj3cFnK9ek6mvX1rOL4XKF48mJnf
                          PHJgjb2KNgo+3UgMPlkCGz4SS/S71nrzPQGYGT3Rs7G8wEI4PT0/hzsvkgC+5xlZvCNaFT3fkHq9
                          7xy8vL/TeTzjApG8BBs1vpwQ17xIybC8Ev0yPbELST1pW5Y9HdUmvFuU3LzedBu9itxRvSzbhj2y
                          /be9jLBFPWfF+zzsJDG9xbYXvDanRz3pP6W9Boa2ve24NL72K/y9liHDvd2Uhbwo9vc9j2oivt6G
                          jb6q/wk9kCnhu7AosD0j2zU9vrGePOfGBz79XhQ9h4p9vMi7Fb4hQi69rr0ZvNYLrT0974c9ns5T
                          Pfoogj0DsME9EyKdPXn7Pz0apo68dLeyOzCh3D2H9P46dxeGvRWXFDtHapw8cG62PaT8aj2fBO+7
                          YudoPX0S8zzUTwI9OAqAvX76Dr0/6Hg6WB0DvQgejj1K+iU8nGeVuxeex7zN0ZC9OYmYPZ6uZblB
                          8ty9fBfWvdJpzr3twOQ9Ov7CvcF7pTwwBEC95tPlvIHpbLzCPIS/pFd6vn2lgb6+t388F+yIPcVQ
                          kLy8zHk+CTkXPWaFCb4246+8wgAqvQgVID3gFbY9bnOaux0dGj6Ypwe+Y5IbvZZVLL5uyjY++1Kp
                          vdhF0b0Qayk8r4YIPSCBzD0Pyfu9ZJq2PFvFCb4LzEs9etYKPVHHAD7Pmrs8BT96vIBAqL1YjD0+
                          vV3TPeaPSb5D6g+9fOG2PT/H9T0mBgy9vqqGvuFwazyI0Pm9K1eWvT3Rorv2Y06+utFhvORvjr1a
                          le28gwdLvgWtEL5f3E2+FUEbvhDOs701KAi+vkN7vmt4sLz73D6+iHiavpM62702jz+9/XTYvYfS
                          TDyRgOO9t1vHumrhJT4TDgI91aUJvTDDj70OQq68TtbgPZxwVT3S3UG7/VkVvrxeZD4aydE99BuZ
                          PBKvJr3jYd69oJPoPMU+OD1EwkY92JjwPWk/sL0YXbM9OR65vcxEhj1f+HG9imZFPj9EGb0lsg89
                          RKtyPgdBTD2argG9vnufPZ1T8D3GgH88FKXhPConGD5Mjw09mZuRvTkEkbrKmgY876JNvDisWz3x
                          AgM9ijJtPJ2UEL2qyPa82fH0vGfRjjyoxk29+KNFOwfKzr09fks8MR5wvUS477xmiH09TNIuPSeH
                          RT0NLgo+Of4Xvv9BujwitbM9PLPkvL9zF7z7E5O8b1lAvdS7vz3dl+y9QJsHPY7+170m54Q937gr
                          vcOuvr1zKbK91AvDPZVYnr24ehs9kFLovcUUIz5NseU8Ht6dvVjItTu1qBU+SvH3PSxeoD0Glmq8
                          1lGwOl7Ut72l+xM+o4X8Ow0H+j0El5c9HYLLPQ4kKj13lWY9KWlBPVOmiT2YXVk9wEL1PIdqQbpC
                          xkg9LlIjvTZjUr0Nnci92575PS5fhr07WmG7kUh+vaO5RT7Ocni99I8Wvl0pmrwY5im8q9pEvvyI
                          Or5c5sQ9toIGPYj0Tr3RNYy62KjcvMakAj1DasQ9h3EXvoKPCb4V/ZK7WkFOPe1qeD0TSyY9dakW
                          vrQyIjyDTqM8u7GZvU9UPz6yw+69Jw2svToRmD21MME9S4HDvA5lRL0ONIE9WrkQPtZtVb4VR4K9
                          gtRTvWP8Aj5vSiu9QPx1vdvkJL443l89/2RRvdudojsFU9k8DHEHPW8a5bx3Bks9pA+GPTNbLzuP
                          ago+Wph3PSPNtb3PBQE9cLMYvrgkk74PsAE+kCYKPuWqzT1NCtA9X2CrPSw7oz2lmCe+XlEoPvvg
                          lrzh87y8yDt9vDmUIT4+bam73aREPFm0ATxthww+iL8OPLJ7sj1qXLW9dtAZvu0oZD0PWjO9B7mc
                          vvru2rw4/m++xfmlPLAMwzxm1Yi9b81HPaQJl701VQ++iqjovdeLhr7o0Mw9GydPvOiXjD0z3vA9
                          T3SgO5bq1j2a0Xe92WexvSscRD0+Rhw9zbcHPa7c7bwLLA69FfcpvdNPAb2HTQ69i/+eO1aN7zxo
                          RuQ8mn33u/pjfTwa8DS80/6xvFZuA73D7AY821Bqu3nHBj0pugE640A8vLFcaDxw23a9Kb6OPK9u
                          3r2Ba6U8+igHvafqD71GboK9AWIxvldGvTy/HCu9cpuPvehi3TxROdW8T74GvanO4ry66gm+ztPD
                          PUZ6G77fgbS91RjevYYFsbzCewi+9VAGPfTmWD0pea89enmMvCoRLz3RayC+FugnPez4yb1obBu+
                          71zhPZZy1Lw6/1e8QWtAPaYtBz30Wf69D59FusExWTwMApw9lrs1vd7XvDyMaSE+JM4JPLJMir1L
                          y3+7OomXPd/narzK8nU905JWvHZV2j1IG5q9bUm1PahgCT2rOFw9dQLCPaAygr2t7Co9MwemPdWR
                          NT4mp0o9Z9/3PV7YZ7zOWqC9FEUWPuX1KL5H1/a8eF5PPYeHjz05/mu7lHWMvInu9z2+XI48/wbU
                          vAe5Cb74Kvm9BChnOyd35Tt7o/s7htVivHLxA75juRY+/g2WuzrjZL2fVqm9212DvMw2473DlB88
                          D9+mPLVngDn224y9BLAPvkHiBr3t5xq7O+4bPZlpub51BN+9MFCJvRg7Jb5BwOO63HzjPF/3t71R
                          Esc8zf4nPvM06z3Ss+a9XlmKPQOG7D0ObkO8dGVZvNu04Lq64qu8/2eruhsIIL2+Zmy7FK9sPMf3
                          8Dv0lKA8NSo/vGVR8bxHNAI8thixu6+CGb2BL3g7W/h9vB63wrsyJTI8w0xqvevlPL4MpZS9XAut
                          vFZGGb2lAdO6JzFeOqnAkL3Oxsm9pMgPPQFQNLuCUt69185HPXMJvjwZUZe9+D1xva6Txr05T/O9
                          LqrHvH9BKDt/XRG9muixvNyeob1Z7rg9r0CqO3zkhL0meHs84ta8vR1g8rxoDYO9Vmytvfrd+b1O
                          x8M9B78SvdlYJDxuZ4A+SeI5PRB5ur24pCc9SJSSvI+f7rzambE7SYxLvECWDD7epAm+Sa2iPLCG
                          K701Tk09m/UaPlrc9Tzb2ca+PQulvAP3fL0TWVQ+ggAPPe5Phb2pHJw92bKOvVuhPj0HzPa9FLGZ
                          Pag/P7769I+9jr27vDzx3L69eVQ+6ZkUPmoN/L6XPJ2+eY4VvjiaLr2/YFe+uOpBvivT6DwCb489
                          37KWvth2Lj3oZTm+9QYNPX8mj77jv9C9WcMevltSrb2lDgi8EnNwvVCdP74HlTO+Do2jPfZIaj2O
                          QEU9F986PSMX+b029ye+9xMCv9LOkL3vlPO9tKN4PYuSobzXdkK8dmL0PWIvmj5YiIe9GbelvTxe
                          rb5h5fK9ODphPUNgLz4KDmc+Xz5Cv1eKHL79KTw+b+NQPoHOUztjyzw+2IscviwmuD0LO+Q9kil0
                          PetXuT002Zc++rvJu9AFEr7btBi+44I+vqCXVT0qnl0+qW06vUL3eTt5k1K9Er4+vin+8D02WdC8
                          lAi8vp3tqb7iRis9+MXFvZT+i76Y6Cm9DVaDPYGa5T03vL08ceL8PdPf3L3Fx8I8Tz+kvfAtqjzK
                          Wwq+zyatPVuZi705ndq9RBwNvvxIeL7S/7y8ahIaPjXM4L0IHwI+RCqPPRBJpbw7SrE8HgYIPuRc
                          F76MO+I9fbFRvrtS0z46D0K+wL8wvo27DL5ysGY7KC4jv3UqeLw7+FM+jkgMu5xc+77z/O69dadD
                          vNoCA75eQxW92octPkAKtDyeOzu+iAanvK9aHL4tJFo9mRVEPmLW+r1TG/U9ABLrPdXyBr5HYbK9
                          XJvpPAkj3bt38Zi9p4fdPc6xhL00xbK97RNkvbf4xL3i8jS+i2KtvFzs/rx3Gqy75t0YPaVwUj3y
                          yeC907QaPpfpoL7wmaK90cwuvsrCOj2ZSRe961kDvTvzFb35BV4+7QAwPu7/izyP5de8rUyZPHmS
                          M73UR6g99b92PfNuyT6AuES+Ur5ZvcYDeT2O4MK8k2VFvbFte7zFFIw95ZPVPeaElzyUVT8+GkSW
                          vfkK6rzhuxW8dVwjPEduQL7NH2i9tJMYPuqF1b3q5UM9NDxGvZBZAr33hki9KSAMPQUInjzzwpY7
                          dyN3PEHMij38vE69HLY4Pagacz0EW+q7TKLLPM7lgL1ctLQ8kaAqPO/1Nz2gQqi70Xt9PewXrrwz
                          MuW7i/GovLBaHbzzSiQ8hI69PNCVsLwqg+48XYcMvX9qhz2wqL29kp/WvYNma73stw++rk75vT84
                          5r3FtEA9s0W5PZPwAj6H6848/G3APeTRiT1rR3C9lzuPvH+Zfb2Mp+U9KPJ+PgEhDr5AIyk8b9HW
                          vKuJZD5KkJ+905RKvqTUwL1e5SY9ym7ePddbR7w78Zg9Z9QKPqWcsTwv10m+wzBlvXZlPr1ggJi+
                          B/FhvkhxEz56nU++ohK7viu0E744wX69DirpvDGhO7wsc4y8WSUSv5wZvb4tby2+auQ5v1/L577T
                          roS9IH0gvggpOL8GH+i+zTnaupTymz0mOYy9Kh+fPHS0hz3UoVc9lpRJPqVvlLzT7bK8xQTiO3MS
                          b7z8lQA9j78sPbRnlD0k4i6+Esm+vG39/70R6J88ftUKvIXH9Tx3koQ+asWfPrCJmD0u3Tk8pAVE
                          vSAxsz20mra9RdImPQQbxD4mgKq+b6AWvniGN77SpIA9zgU9PqTAlb7sBJ0+lpmZPrYy/74ehdq+
                          RFowv5uZ7709GK2+loEQv7wuEL6QNBe+kLoLvo1gOb5ylWM9o1odvqndZL4ta7Y9J7zwPWXYhT3Y
                          6Ym+sflZvQ0iRjxTn5q+8224venus703abo9Io4DvYMUSr51Oxe+sYivvlVM5r564ya9qUK9vpFP
                          gL01CvK+K6YAP+aJUD6kgMW+6brHubg3AD1cJsw9CdxTvmypAr03MDO/GGWKvrHZOr4zv9C9Says
                          vdQIej2LCP892o4WPHTk8T5x3MC9b7YoPWswxT1AysK8oWwDvvtPcj3RaxY9cwJevk2ewbti+Xo9
                          Ic6nvbvuTj2BYQa9b6PuOw3a6Dyl+ty+EVSbvXtjdD2sLQ4+uAC6PV20Ur4piJY8ocjrvZWJw702
                          nTs802j3vKFyxb267CI7dglBvQ9QBL21O4Y98MDDvfDHwbyFBTu7yrYIPUL9rr2TP0u9b0KevWzL
                          wb20Rne+wNmSvslDPr8Nzl++Z9qpPYyMq74ZBRq/G3ugvhgF9T7VIZa+pLpAvusL5D2fHbY+6vZo
                          vsn3Pr7gSgq/+R+ivtvfNr+M1Te+x9TPvUfO9by3ADO+8ocZvZYQ2z0MVoM+2Xq1Pbr/yrzWg8U9
                          9w6pvUhubbw3k1K93ltEvdv/D780myE960eyPRv4pbzaEDg8JxxMvbn5g707zEW+IvTvvi3KPruf
                          Kr49VO22Oh/4F72r3Qi+g1Kwvgjo6D1EOIu9hgrqvUCulT2t9DG+CrQKvpuWwDyZWXc9Q/V+PouT
                          nbuH7CS9i9aFOwQlWb3Nooc96p82vlCFVL4rur895Ou3PfQ92L3HqAI9uQYFvct4Hz2IAVu9CtT1
                          vV9Qr70YqAu9EdtJvQ7/t73Gsza9IHl7PHBUGL0Y2Km8Q2fivZBCJr67lhG+C7euvd9QKj2ycOi9
                          oUH6va7HaD4rCy4+PL22PfCl2rzT6OY8GFQdvf5gPT0BIc293KtYPh9yB75r3sW8BolMvcxiF73T
                          bvA9Xaa5PRmKyr1box69IHmaPTXXiD0EVxQ9sXcCPiGPIL1osUU+BsMsvuKCQL2jXSa9l4hTvAWX
                          rD28Pn872nc1vd0XN7zHscQ8l/HCvAmIKL0H2ii93ZyJPTKrFTxlEZu8y9NGPcfBG7zPxlC9DEXM
                          PUMzGz0/K0K9FjQLPdN3pTyeHiW91KG8vYaiC741tJI8Ms7nPLQl3jxanUc8lMs5vfQ3zryYIsW8
                          nV5OPQhYYT2Z7J48esmHvHFaC71GGVW9OmkBvafhzDyed5E98WeHPf3ST71FayS7OHNiPZPgNrzb
                          h4u9rLmUvcGOWD35dTi8HseJvZ+2XD1HNQ4+hCpxvoEp2LuiItK8u1W+PC1D1r1IlKI9NH6qPc6z
                          jb3JM2W+3LuVPLQmmj1gFsw9OAInPjWxFjxrg9a9ggiPPY1NnL0E1y68zZrJPbuOXj3Uv629tv/f
                          vY3rBT5kqJm8L5SPvf9XjrxtxYg9n6BEPV91KD7/+v28rjLTvD+dE74Mi9m7x9iju1WpPjwPzCK+
                          6AvpvHyE9zzgDE8+HUsDvpdig75LBkg9y9UGPiWtoz0ABfa9Ri9/PfwAmD3ELmi+MY/bvMnTe729
                          DCS+so4qPmqQcD3BvVc8UAnZPPuPM79k8oC9c410vRbZWr3wHgo+7n1oPsMCDT6DKLO8PH6VvZj3
                          Dr4O4o09aFEBvbpogb07ZoQ8oZXxvEJmiTxoX4C9t+wePT8Lvz0OzHc8JxfjvNWiCbzTMgo9KlY1
                          PZGbF7x+QDS+S6gsvSu5Mr1V2CU9131FPczJxztKpdy7V/A9PPEtrT0IFuo8ta8PvQSbAb7LW7A8
                          B1RNOzZGG75Eixc86s0tPXx9PT1ZVru8f+QAvlCCGL1UKd06mVqKvYVuXL2lnf8849hQuzcqor1Q
                          CaA9+7FWvBix9D1Iic+8Rfo3O1YKm7t4mwk+SgeTO2oWnT1z9o280lVPveMflDuLLBo+XPq0PXv+
                          oD2uuyW9uHaPPYz5LL06zmI+J2H9vJTNCL3l8j89iOUhvVyWUL7ISOM8L/JkPUVwKb3fzlo9ucSb
                          vBwDPL0YHza95ev4vc5gCL3FX1A9qhWlPBNSDz23Z1U9JErfvKb3NL2nW4S9d8zkPTLIoL2Ts7y9
                          SOx7PVCalT3JEhK8xhOEPT0glL3kgQy+dPLsPeeMAT4qb3g8mVg/vZjodD1zlA09zwxyvMZJR77t
                          miy9S9K1vRrVRT1Ux6+899LrvZD6B71vOCS9npivvfzqZDzKkaO90rmqPc5U7Ly65ZS9FO0DPdK9
                          Kb0fi349yEqGPQfXHjygYzo8KmgoPnIZnTwLUqI9ipgtvJosHz1LyeQ8b+1rPURCyLyiks+9mtn+
                          vRr47z0llC2+yPstvXkaxz2CsGA+OhUCPOdULL3ftRc+MhHQPYPJLLx21S89ZofTvVG07r0UkEy9
                          XMQWvKCocjkfd7m9hLCRPeVJljy8RTS8kGJNPO8Csj2ElSC+AtRJPReg9T3K+ts9LKtsvX239D34
                          /5W9W7zovUa/yLzX/oA9hlcgvTzVB74qMv09dEnOu1f1kzyQkj++aa+6vRjmQb3Zudg7R0wZvAxC
                          QL3uLoA8MhcnvdbdhD1DTgM+f9IyvfStiT1Iyg++TxCVPYfdYr0Okxe+xENyvSOaNz48VKE8MKI3
                          vZvPyjtCcyU9vBwmPlyQgT4a3Ou8B73nPfTlsjyif6w9F9HqvU//HbyxJfS9fPjEuwkiaz1nG4a5
                          u1JhvU7wfL10Q6o9mdyaPSfcYD0x4pq9Z8QIvLDqYjyu4by89eZpvJ0WxryGrE+8O7YmvWNvc7xB
                          dAS8wPDFPPjaTb1aiUK9YBRjPKwAbzyXuQI9bc0RvQit5bo7hIC9N+mHPDya6z2qHPi9frWfvBV0
                          J70/4eM7bPi0vXAihr1pQw+9hHpXPF/0Ob2TuvW9rDADvv22DTwr2Bu+YNKevY1/rL1hIWY9ni/O
                          vaj7O73FHqE9PasuPnuin71sIEq9UTOsveSlKb2KqJy9I/iKPtEW4jztcHU82MurPHls2T2dRAc+
                          BHiSPRYLeL3m1eE9tvPAvCZvx708Oya+I1kzvZWAez35dS68gzhEvfXhRr7daHe81a+kPcXLIL2K
                          eEY9SesHPfQp/7yOhrC9biVmvYPypL1i06y94wovOwmC47zB2Z89+Qd+vSxcf72Gx189qvD7vJ+l
                          j71qriW9XtpUPcjVCL7e4wc+PZG4Pb8MGD0spsy9D+D5vYCQaTxwdAC+PyNuvFniXb5tTBS5LS2G
                          Pu3mu76Cn4g8PnQkPQm2Ib49KEu+aXffPMd+wz2qXG8+1V1uPoAvhb2u/4k9mygIPGLz+z3Wtqm9
                          qm6qPt9KvT12gXa9CXurPOdCsT0xsXi+UmVKvKAwTj6IwXI862SLPbj8vj1cYsE9s9aPvfcGFr0d
                          Swi9xB/DO+bBWzoSCCm9zAgYvnXrrr2IAPe86GYMvUEYLb2mDpi9GfhCvP+ufTysEv68ttIluiRt
                          Wzz6Xxu98s+JPKWV5bv9oZ08fhjHO/jSWzy4mZG8W+38vACL97usAzS9w88HvqG2br0roPy6oWc7
                          PLAwoDxUSoO9Q6whvcDU4Tw1Nic+8DWZvDJN1L1iTOG8EKsNvP2raL12Q8S9pmrAuyyll71wfMK9
                          niOJPHILlb2PuHU9ywITvRVx+L2LrjK9oXa5u3TTEr1DOQE+/BALPhx3cb1SPEA9cLPnPTw9ZD2P
                          Tqa8WHyhvXZbR736xIc6uh8mvg9u1DyFnK6953Z4PpbvFD1/nlm+RQO/vftxqb1CcIO9GI1svsrf
                          KL7qiTW+RhuivT5Kxr2/XQ08IlwevvndCb7/pz49tD4gvgQI1b2je1++8xSwvewdVr7ZJre9x2jF
                          vRqqYr7ddAu++iTUva2IVb3EmzC+tImAPVN1iL4oG3w+19Ctvchd2r0UDJi8wMh2PoKzIL5dzqu8
                          bTL8vgYrnj2lVXC+S+cDvn+vtb3kwxK8l2jKvYj5DL3ml6M+P8NoPpnaBT2ql3I9Lz4MvpyJzTzP
                          q8U8gCNUPcfruLzuCDq9g8SkvZD5Cj05FAE+bojgvYW3Hr1iNg++IOsSvph7BL6qPqm90ZaiPSha
                          DT4ARJE9ARsWvlIZIL/lMv29Nk/oPTAxC73BtyE9RJTvPOeuZb73IsQ94JwpPhJrHz58utk8o1pp
                          PDa10rvUGsm9wbgbvlwGQb27eNS9mEPhPfLpsDz5L4y9t/YJv3Be3T0vOJ09IhZjOrWxAz7bTCA9
                          qi2MPtDkYz45hh++F0PDuwP6sT0skwQ9JrL9u+5NnTy1dgk+/QGivXySOr6vA6G9NlIpPfC3Cr7T
                          B7K6OAB3PaJ/rT6aREY+lSwLPR9WYr3KjU09oK7PvXkxYLzsisY9SuUAvsX8Br6SgKa9r/rRPbzV
                          C70NIL2+jgZQPvc//T06cCY8tAlDvWhkKj4wj2Q+dAw/vVRmYr54Uaq+WSTNvexsN77YKhQ+N+5o
                          PWHQAD6ymMa9hG8pPftUTT4zeEK9hQoAPtAYk72x7K88QYvAvSiLxb0OtYC9DfYrPYQJb74GIDU8
                          IsHdvYYGFb2K2p09jSiTvA13Ej3HwTK+EQpqvkq5F71f8ra8kp4PvX6dxr2esT69i84zPihMY700
                          Ew0+yJRSPFSwnjz9LwM9LyyzvDGV2L0v5AW9KEZSvmrToL1JFWa9jTQLOsxkMr1vzc67vx/LvTxY
                          lj2m5pk98o0XvgaLqD3c+bG8g90YvRJxmLskWV4+IVQUPWqMez7r0NO8e3F4vhH5Zj6qrN08Lk8I
                          PoePuj1lSOO8I4oTvlnswD6f1bI9Dq5uPiCPLz7vFAU+yE7ZvZH/tT0oArQ9iBlEvcQzqD5FXH68
                          sEmEPJDCV73NfWK9281rPb4/ZLzpntm94uxLPVsLwzyZOJO9Qu6IvNDr+Dgvcjk8sS0jPbsHcb4F
                          x/a8E5BePd4v1L2Q8xi+UMMEPrwYvz3JnZ+9ydYGPnadtLjSerQ84wH2PPe3Qb6Sb4C9lfp4vTgO
                          qr3LKBc+nb7KOygTvT3vbZS8dSNHPeq8/7whDoA9Bl68veLtoL2/K/E9KrUbvbAWx7ws+Xw9D39t
                          vYIXh73qA1e9WwR+PW+Ys7xGWw4+EcysvOQ8vT3p0GQ+Ja5fPcRpEz60CPk+a/saP0gw6j79gVA+
                          giB7vHM3Pb58YBy+ZUi9var0pb4JnQA/PJDbvNoFtL31d/a994G7vN4TvD0j1re9ohTjPDYrrT2+
                          v5k8G/87vjilDD2+4p2867U7PXuhIr1KOq29KQfTvUNKnb3x+4I9EiiJPfFyr73Swzq+n2TIPKDn
                          mD4mKqQ9yvIbvnCZGT5+VjS+yIpTvn4DFDv6RkE9BA5aO0Sjsz0GzNQ9hg6zvel3Vb6okne+o29B
                          PsPW3rwSXvc+DHAPPx0eOj6hea6+pCGWPUFutb3RcEk+fWQTPhRPlL0NzMm+a/FOvmRFAz/gBGw+
                          ibOBPqqoWj8Ip2I+LSz3PvCkbj70Jl4+Q6LXPu6GHT47ygK/S/zTPDLfDr7eL/W+WYZwPmE/wz4S
                          IEs9S+eiPEO8f740rI+8wVKwvcJXHb5khx4+PjY3vVAxtT3+VKe7JMOVPSBhFz03fOu8MDm4vDPB
                          7rwG8VO+BjEyvThFtL2CrYI9XVEIvU7i4Lx5otK9aMciPh/6jj3gm5Y8QI1zvRZI4DzjKO69bwvu
                          PSSuzjvxM4e+wwzIO5b5+z1+YQE9FKTxvFJTSDynDgq9uuGlvCix9b3kTtI8aZGVPLK8hDxRix2+
                          T7euPWZw07yuLes8LCdaPQRbEz6KHyq5Z9G1PT6ilb3imkI9FJKsPTRYOj1c7oY9/ieIPn+ckT4k
                          fBi+11CnvhpvjL6pJrm+dqytvRI74D7EYrw+XKmlPRKWeL7n2Ii9zxkcPpOII7wTuRC+nxfwvFdR
                          n75B73c9duHTvBFEmT3W0gI9dRQwvkBIUL4qDje8/t5Tvg2Mmb2grJm9WjgYvmje3L3vreW8Y1bc
                          PS8bLz4onNi98dgoPrXKcjxbD2s8pg1uvf3EPD4vdP09gRO7PJHh2rzeU0M9cd0mvDKeLL2G4KA9
                          7Zsiva6W3z1OX6I91eaLvtlRzrxv8/a88noKvjEOrLrqxlO+CihxPcjG0b2XFPW9+R2nPQXbtj0h
                          fee8P8KNPotIzz1Hrx2++y0+vNmLuD78dxI9QxQ9vqE4pL4HNsy9qn4LvT8n3L4TgXI+dXA9vZBD
                          Tr0ygHy+1X+UvHt5Vz3UI8K9i+RAvT+Kg7lQwY48g2kDuzUTa7sp3eM8FdvyPRDwm70P1yC+IThY
                          OhkzBr0ztsE8uOxzvas7Qr3zfw68pO9Tuxt8lT2M6sI7fuYIPRRBwDyo4oU91nxxvZsuHr2lHvE9
                          qFJIvZFVOz2MGhI8xZ04vXVbMTvxpsE72dYuPBmUlr2kcSm8DlvAPIkVZj0Ijza+5Ng4PQvnnL0w
                          sW49QgsVvf5wLL3S4Nc95/MhPkUTMr6hsuQ9vtkOPR4ba724VjY+4oEfPtQjKr2HEKW9rcTFvahU
                          OL2Q9CI9gdatvVSpfjri1KE9z/UqPJV42L1FfLW9EnDAPHHoHz3dLAQ+dgLxu9hIxbpBwRW7JXmT
                          vHMMkT04RbI7+vXdPSSBJzzRiaY9z6DPvWhctL2dtyc9p0bkPWKnDz6Js0q+7nrgPduS2Tv6+i29
                          deA3vrBODTxWNo08IlinPLdJeL1e9Ie9TlTBvZeuV7o9gEy9gqMzvT9x8zunZa69JUHRPFgNZL06
                          yoA5I7A3PP//tr5MkNY9Ib6hPIWbBL4Mflc8iDWOPGdkdz3EtPo8KvI4Pe3qSL52vtA9YcxgvtJv
                          LD42oJ08srWuvT/oo7zGka693+29vkk8z77HuHm+XzA8vfgLFr5NHq88RdRtPDjEYb7W9ow7lq28
                          PYDuCT4jwWs+vMVjPntqtTwfbOw9HFsOvh2nBj5a/xc/TKoFP4BdLD/AnPM9oh+KvA+HRb7xiYI8
                          9LVnvQVlpT4CwLy7UULDvROkTr16cYs91cCNvtJYUL60Jhm+NQ6MPUQSAr6T6wi+uMVLvS2mhr0G
                          LSW+gKa3PeHAmz0TIIo+QuCwvjCKAr50E1o+iD5EPTQEZD30Q409Z3L0PTRy1Lsdz5m9y4MXvR5E
                          kDso1qU9+R7bOy/c3D2Uqga9XtZTPlETKr5RJja+YW7GPFKbCT6vNpi9SpRQvpQqzD0l3RE9y2GV
                          PSt31L32nnY9md96veoSH75Ntd08SH06veqU9TxoONs9ebJ3venGjbyfLxW91hqqvbkh6T35pRQ9
                          lRADvQRf6zxeO+U9NV6uvJLltby6Umy9JWOlPN1cPT0MS4G9Iv2BPeP9tb1QSPM910xqPdL6rLx7
                          2Re+I6asu6L9qj34iBK+50fIvIynDT62Y8+8g1T4vAZglj0086S8p5ejPUxE47y+IpE7xlvPvRiC
                          0j10l4C8ZECMvVmHr7wW9be9NHauPfN4z7zXhgS+H/8AvbWD6r3su0w9Mk/UPRPI0jydrq64zBg7
                          PUSx9ryrfAq9qmbDPVwkAb7p8YU9Z8WWPVSl5zy9NDW+0e4Gu+w19L0tuiS+8uODvqC8OT6kQqM9
                          uPmJPSmQ5bzyNNk93NqSvb9+ZrqFGZm8HmuUPW8J4D3diqg7QOKSPeaDKD1jzcm7ADgqvVCl9r24
                          v+y9afyqPcBYO74mgb69smHUO74cAj5QTC6+/WVfvi9AEDu8+oW9NgStPaJq4r0QzQU8Qktcu/s7
                          HbvWOfy855sdO+IS1r0Ri8s9qM+KOpIyl7xVPKi8HAO9vXqprDz92fA7a7eVvdAVvLxK35m9X3+A
                          vOmbnLzQs2w8+UIjPjYCcb3Msq09ymp3vMNgN7we54Q8zJsnPhZFPz1SDMS+t9wFvg+HD73fADA+
                          PtPiu990kD2ZyVY+zKD/PWoPWL5flhO+8Dr7PUTDKT6KeM48M5FTvUj0mTzDbKE8ty7XvXnazT5B
                          gfI+PuykPqaVaT1u+pg8uD0Rvd5pbL6oeZW88bGWvQNCXT7y89m9m6gCPqh7Wr1TR0i94doIvX0k
                          Tr5hkj++jDpfvJ9Y2DxKLUS+fq+3vaNh6jnBPvW9smHsPTUi+D37FGy8DlTbvU8V4bzxmIy8gL5q
                          PO4G3D3QLyA9wWFGvRJbu73Lrju9UIyWPdbDxjwbjwM9dEG2veXjnL0xe7U9wEg7PUYv6L2m9pY9
                          0K8sPTXxZjwc2448ZMLwummOlz3ExZO8Rz+PPC17vLwbH6c8E2nHO2MI2rza1Kk9yPuZPBJEibxj
                          h+K8dUhRPZ96Cz2AiaC7gOsLvQsXej0JW0a8Nt5VvUVQgj0EfhM95UKHPfVk6L0Sk4y7/3bvvFaf
                          Gb41vcw6n4udPAA7wjxO/iw8B+V6vQKuNDwa7mQ9Fk7dvd8B2z19Nca9g0CRvZdMqL035hg+y/Q3
                          PBR3y7zsuZA9mV9NPQE9or3D16e9HgJtPR9dc70SE9+8NwQtOrtb9T1UF6G9/WUAPA7QwLxINbM9
                          VtNtvYU+qz2HxrI8ysQ4PqxEmT151x49pJepvYp3/D1yZ5w8g5LMvVjR8LxAJUe+lc9svv6/ozyU
                          4VO8ExGUPRsMBD3VM6e92CZZvm8ikL5g2ZU+p5pZveRLAD7JLnO9xGN9vJhMN7teZQe+4wmovT0d
                          pD530Hk9I3RKPqhM9T2ZiBU+xOCWPcrJRLz+Y647h9BWPToKSj7d7Fu9xwjbPcfQIz5BTJa70EKE
                          va+TPj3UHKW9SgyEvFgXt73xX469wG7svbNHJb4+B5m9kqtqPM20lb1vW7m9//LlvGLr7zwiVIq9
                          NkKovHnIgT1g0CI+uBLJvHTVxD1lFl89smqiO/Pzrj02GyG9mAskPSQJoLyAp22+fuwcPkvj2L2w
                          aeq95NqyPVMS3LvA7688dBmWPNi7JT2FQqk81IXHO11km7qqOm+8nJ15vL2clbwjslA9Ky4WOp2C
                          Xz0egUC9s0AGPEhHyzxdleK7Z97KPKD75rxJv5m9eS7dPff++zz6bqI9b92+vFDu/bzQqL48v2T+
                          vPui9jtcT/W97CytPWO2dj3acwO9VfXnPC47LT0L9NO9WbuuOhM6jDyRnoM8CZwyvYXgVT0Ducc9
                          SQcavDpqUL3MElM+VlGCvNYUs71nESK92BTJPeWymj0g4aw9MPn1vQppz7yb8cC9mLyfvN03ED2Q
                          XT2+VfymOvEw+Tu1or+8dBtAPqu24L1exHc8irUiPgJ4GT5+Paw8b7EWPkWegj5tYwc9NZQqvl3e
                          Vb6IWqO9tWa5vKwzuL7UI5g+FOepveBEc70ryEo9k+4PPsSchT2JsJq9QJXYvUE/nj3XXIQ82qOd
                          vUyOGT7wbcY9FpcAPYUhNb6jCSG8BkGcvaLiNb5MzSE8tNjMvQ1JxbwBJW49S9g+OrzaOD70WdM9
                          QWgkvu0pzD1Nkr+8AvMjveGZxb1NraM8jHMLPqQSmrxAACE9P1cMPYTSjTxB5Ny8REQaPZEYj70u
                          irc97W9RPQhnLj2Pxii9hcbHvYwoI70syCA+aV9Nvjt8+T2ZtXO7uPHxPdV5jL3K8nM9LxigPLIG
                          cj3Tv48+4Bm7PlSlSb46Vzk+SosgPrf1YT0k4vm9jdMTvica0jusCfK9t1Q7PorhWLwckyy9/2hL
                          vOvu5z1PpIQ9nv2Kve5afTtZVw29N5tavbmixb2G3dW82ORQPa2Isz2mGy69T9/xvU9QiDy4vFW6
                          84JbPDc5p72FqKS88SCAvUUpHL3Hq1e7RyxpPqifLL2hf7c9KtFWvTlahz2QpYM9IR0nPW4G5b0Y
                          6DW+xA8AvdszTL2yaSm+SCgRvu/JkL3fmVg+QHFePjl8tz2g7Sa7SrV4vjBDU7z2FIy9FOaxvYxF
                          KT6OM6o7OtLdO4K/HT6/0Ty+fEJlPrHpRT4OEP8+IDLJPnmKbT4=
                      - 0
                      - !!python/tuple
                        - 11
                        - 1024
                      - !!python/tuple
                        - 1024
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
                - - bias
                  - !!python/object/apply:torch._utils._rebuild_parameter
                    - !!python/object/apply:torch._utils._rebuild_tensor_v2
                      - !!python/object/apply:torch.storage._load_from_bytes
                        - !!binary |
                          gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                          AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                          aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                          Z2UKcQFYCAAAADkyNjkxMTM2cQJYAwAAAGNwdXEDSwtOdHEEUS6AAl1xAFgIAAAAOTI2OTExMzZx
                          AWEuCwAAAAAAAAARK588rzXlu0IKOT11gVa+Ntkevvpoxb2HMvi9hLFevTye2L1TVHO+2jxBPg==
                      - 0
                      - !!python/tuple
                        - 11
                      - !!python/tuple
                        - 1
                      - false
                      - !!python/object/apply:collections.OrderedDict
                        - []
                    - true
                    - !!python/object/apply:collections.OrderedDict
                      - []
              _state_dict_hooks: !!python/object/apply:collections.OrderedDict
              - []
              in_features: 1024
              out_features: 11
              training: true
          - - '1'
            - *id002
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        training: true
    - - '11'
      - &id009 !!python/object:snntorch._neurons.leaky.Leaky
        _backward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _buffers: !!python/object/apply:collections.OrderedDict
        - - - threshold
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNDAzMTY4cQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI0MDMxNjhx
                  AWEuAQAAAAAAAACamZk+
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - reset_mechanism_val
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApMb25nU3RvcmFn
                  ZQpxAVgIAAAAOTIzOTU2MzJxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAgAAAA5MjM5NTYzMnEB
                  YS4BAAAAAAAAAAAAAAAAAAAA
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
          - - beta
            - !!python/object/apply:torch._utils._rebuild_tensor_v2
              - !!python/object/apply:torch.storage._load_from_bytes
                - !!binary |
                  gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                  AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                  aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                  Z2UKcQFYCAAAADkyNDM2MjcycQJYAwAAAGNwdXEDSwFOdHEEUS6AAl1xAFgIAAAAOTI0MzYyNzJx
                  AWEuAQAAAAAAAAAzMzM/
              - 0
              - !!python/tuple []
              - !!python/tuple []
              - false
              - !!python/object/apply:collections.OrderedDict
                - []
        _forward_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _is_full_backward_hook: null
        _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
        - []
        _modules: !!python/object/apply:collections.OrderedDict
        - []
        _non_persistent_buffers_set: !!set {}
        _parameters: !!python/object/apply:collections.OrderedDict
        - []
        _reset_mechanism: subtract
        _state_dict_hooks: !!python/object/apply:collections.OrderedDict
        - []
        inhibition: false
        init_hidden: true
        mem: !!python/object/apply:torch._tensor._rebuild_from_type_v2
        - *id003
        - *id004
        - !!python/tuple
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYCAAAADkyNjc5NzEycQJYAwAAAGNwdXEDSwBOdHEEUS6AAl1xAFgIAAAAOTI2Nzk3MTJx
              AWEuAAAAAAAAAAA=
          - 0
          - !!python/tuple
            - 0
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - {}
        output: false
        spike_grad: *id005
        state_fn: !!python/object/apply:builtins.getattr
        - *id009
        - _build_state_function_hidden
        training: true
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  training: true
learning_rate: 0.001
